<?xml version="1.0" encoding="utf-8"?>
<WebTest Name="ProjectsMilestonesPersons" Id="cfc6dc2d-482c-4423-a040-04030dad0034" Owner="" Priority="0" Enabled="True" CssProjectStructure="" CssIteration="" Timeout="0" WorkItemIds="" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010" Description="" CredentialUserName="" CredentialPassword="" PreAuthenticate="True" Proxy="" StopOnError="False" RecordedResultFile="">
  <Items>
    <Request Method="GET" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/set_user.aspx" ThinkTime="9" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam13.ctl00$body$btnSetUser" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_btnSetUser" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam14.ctl00$body$ddlUsers" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Ley" />
            <RuleParameter Name="Index" Value="79" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/set_user.aspx" ThinkTime="3" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN1.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="{{$HIDDEN1.ctl00$hidDirtyData}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN1.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN1.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="True" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlUsers" Value="k.rMuschick@fhx.com" RecordedValue="k.rMuschick@fhx.com" CorrelationBinding="{{FormPostParam14.ctl00$body$ddlUsers}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$btnSetUser" Value="Become" RecordedValue="Become" CorrelationBinding="{{FormPostParam13.ctl00$body$btnSetUser}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/Projects.aspx" ThinkTime="5" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam8.ctl00$body$mpPeriodStart$ddlMonth" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Jul" />
            <RuleParameter Name="Index" Value="14" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam9.ctl00$body$mpPeriodStart$ddlYear" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;201" />
            <RuleParameter Name="Index" Value="39" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam10.ctl00$body$mpPeriodEnd$ddlMonth" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Sep" />
            <RuleParameter Name="Index" Value="16" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam11.ctl00$body$mpPeriodEnd$ddlYear" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;201" />
            <RuleParameter Name="Index" Value="39" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam12.hiddenInputToUpdateATBuffer_CommonToolkitScripts" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Jan" />
            <RuleParameter Name="Index" Value="8" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/Projects.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://216.182.84.20:8283/PracticeManagement/ProjectDetail.aspx?returnTo=http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjects.aspx" ReportingName="">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="0" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="2" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam27.returnTo" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?returnTo=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam15.__EVENTTARGET" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ame=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; onc" />
            <RuleParameter Name="Index" Value="11" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam16.ctl00$hidDirtyData" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="e = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;&#xD;&#xA;	" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam17.ctl00$body$ddlClientName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;121" />
            <RuleParameter Name="Index" Value="13" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam18.ctl00$body$ddlSalesperson" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Ley" />
            <RuleParameter Name="Index" Value="189" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam19.ctl00$body$ddlProjectManager" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Aa1" />
            <RuleParameter Name="Index" Value="49" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam28.ctl00$hidDirtyData" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="e = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;&#xD;&#xA;	" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam38.ctl00$hidDirtyData" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="e = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;&#xD;&#xA;	" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam42.ctl00$hidAllowContinueWithoutSave" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_hidAllowContinueWithoutSave" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam49.ctl00$hidDirtyData" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="e = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;&#xD;&#xA;	" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN1.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$body$btnAddProject" RecordedValue="ctl00$body$btnAddProject" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_body_tcFilters_ClientState" Value="{&quot;ActiveTabIndex&quot;:0,&quot;TabState&quot;:[true,true,true]}" RecordedValue="{&quot;ActiveTabIndex&quot;:0,&quot;TabState&quot;:[true,true,true]}" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__PREVIOUSPAGE" Value="{{$HIDDEN1.__PREVIOUSPAGE}}" RecordedValue="tpN2XBQF24o4PbkDbg6OWuUcYOGk742RN9_bZm2_vZjTsZv2SiW-U1Mavj4em8C90" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="{{$HIDDEN1.ctl00$hidDirtyData}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN1.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN1.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="True" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$cpe_ClientState" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$mpPeriodStart$ddlMonth" Value="7" RecordedValue="7" CorrelationBinding="{{FormPostParam8.ctl00$body$mpPeriodStart$ddlMonth}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$mpPeriodStart$ddlYear" Value="2010" RecordedValue="2010" CorrelationBinding="{{FormPostParam9.ctl00$body$mpPeriodStart$ddlYear}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$mpPeriodEnd$ddlMonth" Value="9" RecordedValue="9" CorrelationBinding="{{FormPostParam10.ctl00$body$mpPeriodEnd$ddlMonth}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$mpPeriodEnd$ddlYear" Value="2010" RecordedValue="2010" CorrelationBinding="{{FormPostParam11.ctl00$body$mpPeriodEnd$ddlYear}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpMainFilters$chbActive" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpMainFilters$chbPeriodOnly" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpMainFilters$chbProjected" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpMainFilters$chbCompleted" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblClient$14" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblClient$17" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblClient$19" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblProjectGroup$31" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblProjectGroup$32" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblProjectGroup$34" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblProjectGroup$35" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblProjectGroup$36" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblProjectOwner$9" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$1" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$2" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$3" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$4" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$5" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$6" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$7" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$8" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$9" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$10" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$11" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$12" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$13" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$14" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpSearch$txtSearchText" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="hiddenInputToUpdateATBuffer_CommonToolkitScripts" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam12.hiddenInputToUpdateATBuffer_CommonToolkitScripts}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="https://urs.microsoft.com/urs.asmx" ThinkTime="12" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="SOAPAction" Value="&quot;http://Microsoft.STS.STSWeb/RepLookup&quot;" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="MSURS-Client-Key" Value="%2bj7ZEIBOQSEXAOTmhhkXgQ%3d%3d" RecordedValue="%2bj7ZEIBOQSEXAOTmhhkXgQ%3d%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="MSURS-Patented-Lock" Value="Z/ooDaiXtXI%3d" RecordedValue="Z/ooDaiXtXI%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <StringHttpBody ContentType="text/xml; charset=utf-8" InsertByteOrderMark="False">PABzAG8AYQBwADoARQBuAHYAZQBsAG8AcABlACAAeABtAGwAbgBzADoAcwBvAGEAcAA9ACIAaAB0AHQAcAA6AC8ALwBzAGMAaABlAG0AYQBzAC4AeABtAGwAcwBvAGEAcAAuAG8AcgBnAC8AcwBvAGEAcAAvAGUAbgB2AGUAbABvAHAAZQAvACIAIAB4AG0AbABuAHMAOgB4AHMAaQA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhAC0AaQBuAHMAdABhAG4AYwBlACIAIAB4AG0AbABuAHMAOgB4AHMAZAA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhACIAIAB4AG0AbABuAHMAOgBzAG8AYQBwAGUAbgBjAD0AIgBoAHQAdABwADoALwAvAHMAYwBoAGUAbQBhAHMALgB4AG0AbABzAG8AYQBwAC4AbwByAGcALwBzAG8AYQBwAC8AZQBuAGMAbwBkAGkAbgBnAC8AIgA+ADwAcwBvAGEAcAA6AEIAbwBkAHkAPgA8AFIAZQBwAEwAbwBvAGsAdQBwACAAeABtAGwAbgBzAD0AIgBoAHQAdABwADoALwAvAE0AaQBjAHIAbwBzAG8AZgB0AC4AUwBUAFMALgBTAFQAUwBXAGUAYgAvACIAPgA8AEcAPgB7ADIAQwBFAEQAQgBGAEIAQwAtAEQAQgBBADgALQA0ADMAQQBBAC0AQgAxAEYARAAtAEMAQwA4AEUANgAzADEANgBFADMARQAyAH0APAAvAEcAPgA8AE8APgB7ADYAQwAyAEIARABBADQAQQAtADUANgBDADQALQA0ADEAMAA1AC0AOQA2ADMANAAtADMARQBFAEIANQAxAEQANAA5ADUANgAyAH0APAAvAE8APgA8AFAAPgB7ADYANgBCADIAMQBEAEYANgAtADgAMwBDAEIALQA0AEEAQgA4AC0AQgA1ADUAQgAtADcANAAzAEQANgBEAEUARQA5AEQAMAAxAH0APAAvAFAAPgA8AEQAPgA4AC4AMAAuADYAMAAwADEALgA5ADwALwBEAD4APABDAD4AOAAuADAAMAAuADYAMAAwADEALgAxADgANgA2ADkAPAAvAEMAPgA8AFMAPgA2AC4AMQAuADcANgAwADAALgAwAC4AMAA8AC8AUwA+ADwASQA+ADgALgAwAC4ANwA2ADAAMAAuADEANgAzADgANQA8AC8ASQA+ADwATAA+AHUAawAtAFUAQQA8AC8ATAA+ADwAUgAgAHgAbQBsAG4AcwA6AHEAMQA9ACIAaAB0AHQAcAA6AC8ALwBNAGkAYwByAG8AcwBvAGYAdAAuAFMAVABTAC4AUwBUAFMAVwBlAGIALwAiACAAcwBvAGEAcABlAG4AYwA6AGEAcgByAGEAeQBUAHkAcABlAD0AIgBxADEAOgBSAHEAWwAxAF0AIgA+ADwAUgBxAD4APABUAD4AVQBSAEwAPAAvAFQAPgA8AFIAPgBoAHQAdABwADoALwAvADIAMQA2AC4AMQA4ADIALgA4ADQALgAyADAALwBwAHIAYQBjAHQAaQBjAGUAbQBhAG4AYQBnAGUAbQBlAG4AdAAvAHAAcgBvAGoAZQBjAHQAZABlAHQAYQBpAGwALgBhAHMAcAB4AD8AcgBlAHQAdQByAG4AVABvAD0AaAB0AHQAcAAlADMAYQAlADIAZgAlADIAZgAyADEANgAuADEAOAAyAC4AOAA0AC4AMgAwACUAMwBhADgAMgA4ADMAJQAyAGYAUAByAGEAYwB0AGkAYwBlAE0AYQBuAGEAZwBlAG0AZQBuAHQAJQAyAGYAUAByAG8AagBlAGMAdABzAC4AYQBzAHAAeAA8AC8AUgA+ADwATwA+AFAAUgBFADwALwBPAD4APABXAD4ARgBSAEEATQBFADwALwBXAD4APAAvAFIAcQA+ADwALwBSAD4APAAvAFIAZQBwAEwAbwBvAGsAdQBwAD4APAAvAHMAbwBhAHAAOgBCAG8AZAB5AD4APAAvAHMAbwBhAHAAOgBFAG4AdgBlAGwAbwBwAGUAPgA=</StringHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/ProjectDetail.aspx" ThinkTime="3" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="x-microsoftajax" Value="Delta=true" />
      </Headers>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam28.returnTo" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?returnTo=" />
            <RuleParameter Name="EndsWith" Value="|" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam20.ctl00$body$txtProjectName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtProjectName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam21.ctl00$body$txtClientDiscount" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtClientDiscount" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam22.ctl00$body$ddlProjectStatus" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Act" />
            <RuleParameter Name="Index" Value="4" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam23.ctl00$body$ddlClientName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;121" />
            <RuleParameter Name="Index" Value="8" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam24.ctl00$body$ddlProjectGroup" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Def" />
            <RuleParameter Name="Index" Value="28" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam25.ctl00$body$ddlSalesperson" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Ley" />
            <RuleParameter Name="Index" Value="186" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam26.ctl00$body$ddlProjectManager" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Aa1" />
            <RuleParameter Name="Index" Value="46" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam27.__EVENTTARGET" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ame=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; onc" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="returnTo" Value="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjects.aspx" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjects.aspx" CorrelationBinding="{{QueryStringParam27.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00$scriptManager" Value="ctl00$body$upnlBody|ctl00$body$ddlClientName" RecordedValue="ctl00$body$upnlBody|ctl00$body$ddlClientName" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN1.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$body$ddlClientName" RecordedValue="ctl00$body$ddlClientName" CorrelationBinding="{{FormPostParam15.__EVENTTARGET}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="True" RecordedValue="True" CorrelationBinding="{{FormPostParam16.ctl00$hidDirtyData}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN1.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN1.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="False" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtProjectName" Value="New one for prma" RecordedValue="New one for prma" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectStatus" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlClientName" Value="562" RecordedValue="562" CorrelationBinding="{{FormPostParam17.ctl00$body$ddlClientName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlPractice" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlSalesperson" Value="3034" RecordedValue="3034" CorrelationBinding="{{FormPostParam18.ctl00$body$ddlSalesperson}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidSalesCommissionId" Value="{{$HIDDEN1.ctl00$body$hidSalesCommissionId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectManager" Value="3641" RecordedValue="3641" CorrelationBinding="{{FormPostParam19.ctl00$body$ddlProjectManager}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidPracticeManagementCommissionId" Value="{{$HIDDEN1.ctl00$body$hidPracticeManagementCommissionId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtBuyerName" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtClientDiscount" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__ASYNCPOST" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/ProjectDetail.aspx" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="x-microsoftajax" Value="Delta=true" />
      </Headers>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam29.returnTo" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?returnTo=" />
            <RuleParameter Name="EndsWith" Value="|" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam29.ctl00$body$txtProjectName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtProjectName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam30.ctl00$body$txtClientDiscount" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtClientDiscount" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam31.ctl00$body$ddlProjectStatus" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Act" />
            <RuleParameter Name="Index" Value="4" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam32.ctl00$body$ddlClientName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;121" />
            <RuleParameter Name="Index" Value="8" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam33.ctl00$body$ddlProjectGroup" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Def" />
            <RuleParameter Name="Index" Value="28" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam34.ctl00$body$ddlPractice" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;202" />
            <RuleParameter Name="Index" Value="31" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam35.ctl00$body$ddlSalesperson" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Ley" />
            <RuleParameter Name="Index" Value="186" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam36.ctl00$body$ddlProjectManager" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Aa1" />
            <RuleParameter Name="Index" Value="46" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam37.__EVENTTARGET" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ame=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; onc" />
            <RuleParameter Name="Index" Value="4" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="returnTo" Value="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjects.aspx" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjects.aspx" CorrelationBinding="{{QueryStringParam28.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00$scriptManager" Value="ctl00$body$upnlBody|ctl00$body$ddlProjectStatus" RecordedValue="ctl00$body$upnlBody|ctl00$body$ddlProjectStatus" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN0.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="True" RecordedValue="True" CorrelationBinding="{{FormPostParam28.ctl00$hidDirtyData}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN0.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN0.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="False" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtProjectName" Value="New one for prma" RecordedValue="New one for prma" CorrelationBinding="{{FormPostParam20.ctl00$body$txtProjectName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectStatus" Value="3" RecordedValue="3" CorrelationBinding="{{FormPostParam22.ctl00$body$ddlProjectStatus}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlClientName" Value="562" RecordedValue="562" CorrelationBinding="{{FormPostParam23.ctl00$body$ddlClientName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectGroup" Value="49" RecordedValue="49" CorrelationBinding="{{FormPostParam24.ctl00$body$ddlProjectGroup}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlPractice" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlSalesperson" Value="3034" RecordedValue="3034" CorrelationBinding="{{FormPostParam25.ctl00$body$ddlSalesperson}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidSalesCommissionId" Value="{{$HIDDEN0.ctl00$body$hidSalesCommissionId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectManager" Value="3641" RecordedValue="3641" CorrelationBinding="{{FormPostParam26.ctl00$body$ddlProjectManager}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidPracticeManagementCommissionId" Value="{{$HIDDEN0.ctl00$body$hidPracticeManagementCommissionId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$chbIsChargeable" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtBuyerName" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtClientDiscount" Value="2.00" RecordedValue="2.00" CorrelationBinding="{{FormPostParam21.ctl00$body$txtClientDiscount}}" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN0.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$body$ddlProjectStatus" RecordedValue="ctl00$body$ddlProjectStatus" CorrelationBinding="{{FormPostParam27.__EVENTTARGET}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN0.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="/wEPDwUKMTkzMjg4NTI5Ng9kFgJmD2QWBAIBD2QWAgICDxUEDUNzcy9zdHlsZS5jc3MRQ3NzL3N0eWxlLWllNy5jc3MRU2NyaXB0cy9Db29raWUuanMFY3RsMDBkAgMPZBYIAgYPDxYCHgtOYXZpZ2F0ZVVybAUPfi9Qcm9qZWN0cy5hc3B4ZBYCZg8PFgIeCEltYWdlVXJsBRt+L0ltYWdlcy9sb2dpYzIwMjBfbG9nby5naWZkZAILEDwrAA0CAA8WAh4LXyFEYXRhQm91bmRnZAwUKwAIBRswOjAsMDoxLDA6MiwwOjMsMDo0LDA6NSwwOjYUKwACFhAeBFRleHQFCFByb2plY3RzHgVWYWx1ZQUIUHJvamVjdHMfAAUhL1ByYWN0aWNlTWFuYWdlbWVudC9Qcm9qZWN0cy5hc3B4HgdUb29sVGlwBRhDb21wYW55IFBlcmZvcm1hbmNlIHBhZ2UeB0VuYWJsZWRnHgpTZWxlY3RhYmxlZx4IRGF0YVBhdGgFIS9wcmFjdGljZW1hbmFnZW1lbnQvcHJvamVjdHMuYXNweB4JRGF0YUJvdW5kZ2QUKwACFhAfAwUNT3Bwb3J0dW5pdGllcx8EBQ1PcHBvcnR1bml0aWVzHwAFKC9QcmFjdGljZU1hbmFnZW1lbnQvT3Bwb3J0dW5pdHlMaXN0LmFzcHgfBQUVT3Bwb3J0dW5pdHkgTGlzdCBwYWdlHwZnHwdnHwgFKC9wcmFjdGljZW1hbmFnZW1lbnQvb3Bwb3J0dW5pdHlsaXN0LmFzcHgfCWdkFCsAAhYQHwMFB1JlcG9ydHMfBAUHUmVwb3J0cx8ABSYvUHJhY3RpY2VNYW5hZ2VtZW50L1JlcG9ydHMvQmVuY2guYXNweB8FBQdSZXBvcnRzHwZnHwdnHwgFJi9wcmFjdGljZW1hbmFnZW1lbnQvcmVwb3J0cy9iZW5jaC5hc3B4HwlnZBQrAAIWEB8DBQpUaW1lIEVudHJ5HwQFClRpbWUgRW50cnkfAAUiL1ByYWN0aWNlTWFuYWdlbWVudC9UaW1lRW50cnkuYXNweB8FBRJUaW1lIEVudHJ5IHJlY29yZHMfBmcfB2cfCAUiL3ByYWN0aWNlbWFuYWdlbWVudC90aW1lZW50cnkuYXNweB8JZ2QUKwACFhAfAwUIQ2FsZW5kYXIfBAUIQ2FsZW5kYXIfAAUhL1ByYWN0aWNlTWFuYWdlbWVudC9DYWxlbmRhci5hc3B4HwUFFUNvbXBhbnkgQ2FsZW5kYXIgcGFnZR8GZx8HZx8IBSEvcHJhY3RpY2VtYW5hZ2VtZW50L2NhbGVuZGFyLmFzcHgfCWdkFCsAAhYQHwMFC01hcmdpbiBUZXN0HwQFC01hcmdpbiBUZXN0HwAFIy9QcmFjdGljZU1hbmFnZW1lbnQvTWFyZ2luVGVzdC5hc3B4HwUFC01hcmdpbiBUZXN0HwZnHwdnHwgFIy9wcmFjdGljZW1hbmFnZW1lbnQvbWFyZ2ludGVzdC5hc3B4HwlnZBQrAAIWEB8DBQ1Db25maWd1cmF0aW9uHwQFDUNvbmZpZ3VyYXRpb24fAAUnL1ByYWN0aWNlTWFuYWdlbWVudC9DaGFuZ2VQYXNzd29yZC5hc3B4HwUFFFN5c3RlbSBjb25maWd1cmF0aW9uHwZnHwdnHwgFJy9wcmFjdGljZW1hbmFnZW1lbnQvY2hhbmdlcGFzc3dvcmQuYXNweB8JZ2RkFg5mD2QWAgIBDw8WAh8ABSEvUHJhY3RpY2VNYW5hZ2VtZW50L1Byb2plY3RzLmFzcHhkFgJmDxUBCFByb2plY3RzZAIBD2QWAgIBDw8WAh8ABSgvUHJhY3RpY2VNYW5hZ2VtZW50L09wcG9ydHVuaXR5TGlzdC5hc3B4ZBYCZg8VAQ1PcHBvcnR1bml0aWVzZAICD2QWAgIBDw8WAh8ABSYvUHJhY3RpY2VNYW5hZ2VtZW50L1JlcG9ydHMvQmVuY2guYXNweGQWAmYPFQEHUmVwb3J0c2QCAw9kFgICAQ8PFgIfAAUiL1ByYWN0aWNlTWFuYWdlbWVudC9UaW1lRW50cnkuYXNweGQWAmYPFQEKVGltZSBFbnRyeWQCBA9kFgICAQ8PFgIfAAUhL1ByYWN0aWNlTWFuYWdlbWVudC9DYWxlbmRhci5hc3B4ZBYCZg8VAQhDYWxlbmRhcmQCBQ9kFgICAQ8PFgIfAAUjL1ByYWN0aWNlTWFuYWdlbWVudC9NYXJnaW5UZXN0LmFzcHhkFgJmDxUBC01hcmdpbiBUZXN0ZAIGD2QWAgIBDw8WAh8ABScvUHJhY3RpY2VNYW5hZ2VtZW50L0NoYW5nZVBhc3N3b3JkLmFzcHhkFgJmDxUBDUNvbmZpZ3VyYXRpb25kAgwQPCsADQEADxYCHwJnZGRkAg4PZBYEAgEPZBYCZg9kFgQCAQ9kFhACAQ8PFgIeCFJlYWRPbmx5aGRkAgkPEA8WCB4UQXBwZW5kRGF0YUJvdW5kSXRlbXNnHg5EYXRhVmFsdWVGaWVsZAUCSWQeDURhdGFUZXh0RmllbGQFBE5hbWUfAmdkEBUGAAhJbmFjdGl2ZQlQcm9qZWN0ZWQGQWN0aXZlCUNvbXBsZXRlZAxFeHBlcmltZW50YWwVBgABMQEyATMBNAE1FCsDBmdnZ2dnZxYBZmQCDw8QDxYIHwtnHwwFAklkHw0FBE5hbWUfAmdkEBUVAAYxMjEyMTIDQUdJBkVVUk9QRQVpdmNjNAhKdW5lIG5ldwpMb2dpYzIwLzIwCU1pY3Jvc29mdAlNeUFkVmFsZXQDT0NTBFBFUkYGUUF0ZXN0BVNpbWJhCVN0YXJidWNrcwRURVNUFFRoZSBHYXRlcyBGb3VuZGF0aW9uB1RNb2JpbGUFVFRUVFQOVHVlc2RheSBjbGllbnQIVmFjYXRpb24MVmVudHVyZSBBcnRzFRUAAzU2MgM1NTMDNTYzAzU1MQM1NjcDNTQxATIDNTU0AzU1NwM1NjQDNTY1AzU1OAM1NTYDNTYwAzU0OAM1NDQDNTU5AzU2NgM1NjgDNTQwFCsDFWdnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZxYBAgFkAhMPEA8WCB8LZx8MBQJJZB8NBQROYW1lHwJnZBAVAg1EZWZhdWx0IEdyb3VwCU5ldyBHcm91cBUCAjQ5AjUwFCsDAmdnFgFmZAIVDxAPFggfC2cfDAUCSWQfDQURUHJhY3RpY2VXaXRoT3duZXIfAmdkEBUNABkyMDI3IChEb2xnb3BvbG92YSwgSnVsaWEpIjIwMjctMSAoYmJiYmJiYmJiYmIsIGJiYmJiYmJiYmJiYikiMjAyNy0yIChiYmJiYmJiYmJiYiwgYmJiYmJiYmJiYmJiKSFBZG1pbmlzdHJhdGlvbiAoQ2hhbmNodWFuLCBCcm9jaykpQnVzaW5lc3MgSW50ZWxsaWdlbmNlIChCZWhhbmFuLCBCZW5lZGljdCkWaW50ZXJuYWwgKGVlZSwgZWVlZWVlKShNYW5hZ2VtZW50IENvbnN1bHRpbmcgKENoYW5jaHVhbiwgQnJvY2spEW5ldyAoNTEyLCBhYmNkZWYpEHFhMSAoQWEyNCwgVGVzdCkbU2FsZSwgdGVzdCAoQmFsbGFyLCBIZXJiIDEpKFRlY2hub2xvZ3kgQ29uc3VsdGluZyAoQ2hhbmNodWFuLCBCcm9jaykTVGVzdDEgKDUxMiwgYWJjZGVmKRUNAAIxNwIxOAIxOQE0ATUCMjABMgIyMQIxNAE2ATMCMTMUKwMNZ2dnZ2dnZ2dnZ2dnZxYBZmQCGQ8QZBAV5QEACzUxMiwgYWJjZGVmEUEgcHJvaiBzYXZlLCBUZXN0DEFhMSwgSGV5IHlvdQpBYTI0LCBUZXN0GmFhYWFhYWFhYWFhYWEsIGFhYWFhYWFhYWFhCmFiYzIsIExpb24MQWN0aXZlLCBUZXN0DkFjdGl2ZS0yLCBUZXN0EmFkYWRhZGEsIGRhZGFkYWRhZBNBZGRlZCBieSwgUmVjcnVpdGVyFUFkZGVkIGJ5LCBSZWNydWl0ZXItMgxhZ2FpbiwgYWdhaW4QQWtoYW5kLCBIZWN0b3IgMQpBa3ZhLCBBa3ZhCkFsZXgsIEFsZXgKQWxsYSwgQWxsYRBBbHZpcmV6LCBTdGFudG9uCkFubmEsIEFubmEMYW50ZXksIEFudGV5DEFudG9uLCBBbnRvbgxBcHJpbCwgQXByaWwKYXJlYzEsIGRhcgxhcnJyciwgYXJhcnIMYXJ0dXIsIGFydHVyEWFzc3Nzc3MsIGFzc3Nzc3NzDWFzd2d5cjEzLCA1MTIMYXRlc3QgMSwgcmVjCmF3d3csIGF3d3cMQXh4eHgsIEF4eHh4DUJhY21hbiwgRGFyaW8NQmFsZCwgQWxiZXJ0bwxCYWxkLCBXZXNsZXkOQmFsbGFyLCBIZXJiIDENQmFzZWxleSwgRGVvbhJCYXVta2lyY2huZXIsIEN1cnQZYmJiYmJiYmJiYmIsIGJiYmJiYmJiYmJiYhFCZWhhbmFuLCBCZW5lZGljdA5CaGFza2FyLCBKb3JnZQ5CaGFza2FyLCBQZXJjeRFCbGVzc2V0dCwgRGVzbW9uZBBCdW1icmF5LCBJZ25hY2lvCWJ5LCBidXNzeQlDYW5haywgVHkRQ2FyYWJlbGxvLCBDYXJsb3MRQ2hhbGFiYW4sIE9ybGFuZG8QQ2hhbmNodWFuLCBCcm9jaxJDaGFuY2h1YW4sIFRlb2Rvcm8NQ29jcmFuLCBIaXJhbRZjb25zdWx0YW50LCBjb25zdWx0YW50C0NvdWV5LCBFcmluDENydWVsLCBGcml0eg5jdmJjdmIsIGZnYnZ2Yg5DeWxlciwgQWxmb256bwtDeWxlciwgQWx2YQ9EYXZ5ZG92LCBCcmFkbHkOREVGRUNULCBERUZFQ1QNRGVqb29kZSwgR2xlbhNEZW1vc3RoZW5lcywgU2VyZ2lvEURlcmVuemlzLCBTdGVwaGFuD0RlcnJlciwgTWFycXVpcxBEZXNob3RlbCwgSXNpZHJvEERlc2hvdGVsLCBSb25uaWUNRGlicmlubywgRGljaw9EaW1hdXJvLCBXYWx0b24NRGlzY2hlciwgUnlhbhJEb2xnb3BvbG92YSwgSnVsaWEORG9saXZlaXJhLCBSZXkMRG9seWEsIEFydGVtD0RvcmNlbnQsIE1hcnZpbgxEcmFhLCBKdXN0aW4TRHVicmV1aWwsIEhlcmliZXJ0bwxEdXJvbCwgTm9sYW4PRHppZHVjaCwgSmVzc2llC2VlZSwgZWVlZWVlEUVoaWdpYXRvciwgQXJub2xkEUVpY2hzdGFkdCwgWWVzLW5vDUVrbG92LCBHZXJhbGQRRWxsZXJrYW1wLCBMdWNpZW4PRW5nbGVtYW4sIEJ1ZGR5EGVydGVydGUsIGVydGV0ZXQQZXJ3ZXJlciwgcndyd2VychNFc3RlcmxpbmcsIERlbWFyY3VzDUV0aGVsLCBKZXJhbXkQRXZhbmNoeWssIFJhc2hhZBJFdmFuY2h5aywgV2lsbGlhbXMORmFsYWNjbywgRHdhaW4ORmFsYWNjbywgTW9zaGUMRmFudGEsIEZhbnRhDGZkc2EsIHdlcnR3cQxGZW5vZmYsIENhcnkSZmdkZ2RnZmRnLCBmZmRnZmZnEmZnaGZnaCwgZ2JnZmhmZ2hnZg1GaWdsYXIsIEdheWxlDUZsdWVjaywgQmxha2UPRm9yc3RvbiwgRmVsaXBlDUZ1cm5lLCBTaGF5bmUPRnVybmUsIFRoZW9kb3JlD0dhbnosIEZyYW5jaXNjbwxnYXN3ZGcsIGFhMTISZ2h3Ziwgd3FyZXlxd2VyeXF3EkdpYWNvbWF6emksIERlbG1lcgxHaWJiLCBEaWxsb24TR29uY2hhcmVua28sIE5pa2l0YRJHcmFtaW5za2ksIE1hdHRoZXcXZ3J3ZXJnd2VyZ3dlciwgYWdhc2RnYXMOR3VlbmluLCBLZWVuYW4NZ3dlcmd3LCBhc2RmZxFIYWxtc3RlYWQsIERhbmlsbw5IYW5uYW1hbiwgQ29sZQ9IYW5uYW1hbiwgTG91aXMQSGVhZGxvbiwgQW50b2luZRBIb3JzZWZvcmQsIEJlcnJ5DkluYWN0aXZlLCBUZXN0EkludGVybmFsLCBJbnRlcm5hbAZJUSwgSVEISVExLCBJUTEISVEyLCBJUTIISVEzLCBJUTMLSXZlcnksIEFsZG8LSmFub3csIFRvcnkRS2FiYWJpaywgV2lsbGlhbXMRS2FjaGFsb3ZhLCBZdWxpeWEQS2FycmVscywgQ2FtZXJvbg5LYXphYmksIEVsaWphaBFLbGluZ2FtYW4sIEpvc2h1YQxLbm9ycCwgTW9udHkRS29zYXJlZmYsIFVseXNzZXMOS29zbGFuLCBCcm9va3MPS3J1bWJlaW4sIFdheW5lC0tydXplbCwgU2lkDUt1dGx1LCBSaWNraWUMTGFtYW4sIEVsbWVyDExhbnplLCBCZW5ueRBMYXRpbW9yZSwgSm9yZGFuEUxhdGltb3JlLCBSb2RyaWdvDUxhdmdsZSwgRWZyZW4NTGF6aW8sIENhbHZpbgpMZWFkLCBMZWFkDUxlYW56YSwgTG91aWUPTGVobmluZywgRGFsbGFzD0xlaG5pbmcsIEdlbmFybxFMZXBldGljaCwgTHlud29vZAxMZXloLCBEYXJyaW4OTGlld2FsZCwgR2F2aW4QTGluZGJsb20sIERhcnJpbhFMaW5kYmxvbSwgRnJhbmNlcxpsaW5vdW5vdW5vbm9pdSwgaGpramhramhrahlsaW5vdW5vdW5vbm9pdSwgcHJvamVjdGVkDUxpcGlyYSwgUm95YWwPTG9md2FsbCwgRHVuY2FuD0xvdmVyZGksIERvcnNleQtMdXppLCBCdWRkeRFNYWN1cmR5LCBTdGVybGluZwltYW4sIExpb24NTWFuYWdlciwgTGluZRJNYXJhdG9zLCBEZW1ldHJpdXMNTWFyYXRvcywgT3dlbg5NYXJpbmtvLCBLb3JleQxNYXRoZW4sIEVyaW4NTWF0aGVuLCBXaWxseQxtYywgYWRkZWQgYnkObWMtMiwgYWRkZWQgYnkSbWMtMyBuZXcsIGFkZGVkIGJ5Em1jLTQgdXBkLCBhZGRlZCBieQ9NY2VuYW5leSwgSm9uYXMOTWNlbmFuZXksIE1pbG8QTWNnYWZmZWUsIExhdmVybg9NY2dsb2NrdG9uLCBIYWkRTWNndWlyayAsIEVtZXJzb24OTWNsZXJveSwgSmFtZWwNTWNsaWxseSwgTHlubhJNY25lc3BleSAsIERhcnJpY2sPTWNuZXNwZXksIElyd2luEk1jbmVzcGV5ICwgSmFjcXVlcw5NZWVkcywgQ2xlbWVudA5NZXJrbGV5LCBKYXNvbg5NZXRlZXIsIERhbWllbg9NaWxsc3RlYWQsIFdpbGwQTW9uZm9yZSwgQ2FtZXJvbg1Nb25rcywgTW9ucm9lDU1vbnJvdywgS2VubnkQTW9udHJvc2UsIEdlcmFsZBFNb250cm9zZSwgT2N0YXZpbxNNb29kaXNwYXVnaCwgSm9obmllE01vb2Rpc3BhdWdoLCBSYWZhZWwTTW90dGVzaGFyZCwgQ2FtZXJvbhFNb3R0ZXNoYXJkLCBWaW5jZQ9NdWxsaXNvbiwgRWRnYXISbmV3IHRlc3QsIG5lIHd0ZXN0CE5PVCwgTk9UDG9hemlzLCBvYXppcw5vYXppczEsIG9hemlzMQ9PY2hpbmFuZywgSXZvcnkMT3Ntb25kLCBBbW9zEVBhc2NhbmlrLCBNaWNoZWFsDFBlbGxvbSwgQ3VydBxQZXJzb24gMSB3aXRoLCBQZXJzb24gMSB3aXRoIlBlcnNvbiAyIHdpdGhvdXQsIFBlcnNvbiAyIHdpdGhvdXQUUGVyc29uanVkLCBQZXJzb25qdWQPUGV0dGlib25lLCBPbGVuEVBvbnRicmlhbmQsIENvcmV5CHBvciwgcG9yDHF3ZXN0LCBxd2VzdA1yZWMsIGFkZGVkIGJ5CFJFQywgUkVDD3JlYy0yLCBhZGRlZCBieQ9SZWRmZXJuLCBJc2FpYWgQUkVMRUFTRSwgUkVMRUFTRRhSRUxFQVNFIFJFQywgUkVMRUFTRSBSRUMPUmVud2ljaywgSHVudGVyDHJlb2QsIHJlY29yZA9SZXZpbGxhLCBSb2JiaWUPUm9nYWNoZXZhLCBPbGdhD1NoZW13ZWxsLCBOb2xhbhFTaGVtd2VsbCwgUXVlbnRpbg5TaXJtb25zLCBUZWRkeRFTdGF0aGFtICwgV2lsbGlhbhB0YXRhYXQsIHRhdGF0YXRhEVRlc3Rlcm92LCBubyByb2xlEVZhbmRlcmhleWRlbiwgR2lsEVZhbnRhc3NlbGwsIFNoYXVuDFdhZGEsIEphcnJvZA5XZWl0em1hbiwgU2FuZxR3ZXJ3ZXJ3ZXIsIGV3cndlcnJ3ZRF3ZXJ3cndlciwgZXJ3ZXdlcg9XaWVkZW1hbiwgQ2FsZWIIV1dXLCBXV1cLWW9wcCwgQ3JhaWcV5QEABDM2NTkEMzY0OAQzNjQxBDM2NDYEMzY2OQQzNjk5BDM2NDUEMzY0NwQzNzEwBDM2NTEEMzY1MgQzNzIwBDM1NjgEMzY4MgQzNjgzBDM2NjQDMjQwBDM2NjUEMzY2NwQzNjgxBDM3MDMEMzcxMwQzNjkzBDM3MTEEMzY5MQQzNjQzBDM3MTIEMzY5MgQzNjk1BDM1OTAEMzYzNwQzNTU1BDM1NzEEMjcyOQQzNTkzBDM2NzEEMzU0NwQzNTY5BDEyNzgEMzE0NwQyNjgzBDM2NzABMQQzNTc5BDM1NzMEMzQzOAQzNTM1BDM1NzYEMzY3MgQzNTU5BDI3MjUEMzcxOQQzNDQ2BDM1NTIEMzU1NgQzNzIxBDM1NTEEMzQzNAQzMTg5BDM1ODAEMzQ0MgQyNzI2ATYEMjczMQQzNDYwBDM3MDQEMTgwMAQzNzE3BDM1MTkEMzU3NQQzNTg3BDM1MTQEMzU1OAQzNjg2BDM0NTkEMzU2NgQyNzM2BDM2MjgEMzUwMgQzNjg1BDM2OTAEMzQzMgQzNDQxBDM0NDMEMzYzMAQzNjMxBDM1OTQEMzY4NAQzNjYyBDM0MzcEMzcwOAQzNjY2BDM1ODkEMzQzNgQzNjM0BDI3MzUEMzU2NQQzNTQxBDM2NDIEMzY2MwQzNTIwBDM1NTAEMzY0OQQzNDMxBDM2NjEEMjcyNAQzNjYwBDM1OTEEMzUxMQQyNzI4BDM1OTIEMzU2MgQzNjQ0BDM2ODgEMzY3NwQzNjc4BDM2NzkEMzY4MAQzNTg4BDMxODgEMzU3MgQzNzE4BDM0NDgEMzU0NQQzNTQ2BDM2MjkEMzU0OQQzNTUzBDM1ODIEMzU4MwQzNDQ0BDM0NTMEMzUxNgQzNTE3BDM1NDgEMzU2MQQzNDc4BDM2NzMEMjY4MgQzNTg1BDM1NjcEMjczMAQzMDM0BDM1ODEEMzUyNgQzNDMzBDM2OTcEMzY5NgQzNDQ5BDM2MzIEMzU0MAQzNTcwBDM0NTEEMzY3NgQzNjc1BDM1NjAEMzQzNQQzNTYzBDM1NDQEMzQ0NQQzNjU1BDM2NTYEMzY1OAQzNjU3BDM2MzgEMzQ0MAQyNjgxBDM1NDMEMzYzOQMyNDEEMjczNAQzNTU3BDM1NjQDOTMzBDI3MzIEMzQ1MAQzNTg2BDM1NDIEMzQzMAQyNzI3AzY0MwQyMjA3BDM0NTIBMgQzNTAzBDM1MTgEMzU3NwMyMzkEMzcwMQQzNjY4BDM3MDYEMzcwNwQzNTA1BDI3MzMDODE3BDM0OTcEMzcxNQQzNzE2BDM3MDUEMzU4NAQzNTc0BDM3MDIEMzcwOQQzNjUzBDM2ODkEMzY1NAM4NzUEMzcyMwQzNzI0BDEyNzcEMzcxNAQzNTEwBDM3MjIEMzYzNQQzNDU0BDM0MzkEMzYzMwQzNjg3BDM2OTgEMzUxNQQzNjQwBDM1MjEEMzYzNgQzNjc0BDM3MDAEMzQ0NwQzNjk0BDM1NzgUKwPlAWdnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2cWAQKPAWQCHQ8QDxYCHwJnZBAVdQxBYTEsIEhleSB5b3UKQWEyNCwgVGVzdAphYmMyLCBMaW9uDEFjdGl2ZSwgVGVzdA5BY3RpdmUtMiwgVGVzdBJhZGFkYWRhLCBkYWRhZGFkYWQTQWRkZWQgYnksIFJlY3J1aXRlchVBZGRlZCBieSwgUmVjcnVpdGVyLTIMYWdhaW4sIGFnYWluEEFraGFuZCwgSGVjdG9yIDEKQWt2YSwgQWt2YQpBbGV4LCBBbGV4CkFsbGEsIEFsbGEKQW5uYSwgQW5uYQxhbnRleSwgQW50ZXkMQXByaWwsIEFwcmlsCmFyZWMxLCBkYXIMYXJycnIsIGFyYXJyDGFydHVyLCBhcnR1chFhc3Nzc3NzLCBhc3Nzc3NzcwxhdGVzdCAxLCByZWMMQmFsZCwgV2VzbGV5DkJhbGxhciwgSGVyYiAxEkJhdW1raXJjaG5lciwgQ3VydBFCZWhhbmFuLCBCZW5lZGljdAlieSwgYnVzc3kJQ2FuYWssIFR5EUNhcmFiZWxsbywgQ2FybG9zEENoYW5jaHVhbiwgQnJvY2sSQ2hhbmNodWFuLCBUZW9kb3JvFmNvbnN1bHRhbnQsIGNvbnN1bHRhbnQOY3ZiY3ZiLCBmZ2J2dmILQ3lsZXIsIEFsdmERRGVyZW56aXMsIFN0ZXBoYW4SRG9sZ29wb2xvdmEsIEp1bGlhDERvbHlhLCBBcnRlbQxEcmFhLCBKdXN0aW4PRHppZHVjaCwgSmVzc2llC2VlZSwgZWVlZWVlEUVpY2hzdGFkdCwgWWVzLW5vEUVsbGVya2FtcCwgTHVjaWVuD0VuZ2xlbWFuLCBCdWRkeRBlcnRlcnRlLCBlcnRldGV0EGVyd2VyZXIsIHJ3cndlcnITRXN0ZXJsaW5nLCBEZW1hcmN1cw5GYWxhY2NvLCBEd2Fpbg5GYWxhY2NvLCBNb3NoZQxGYW50YSwgRmFudGEMZmRzYSwgd2VydHdxEmZnZGdkZ2ZkZywgZmZkZ2ZmZxJmZ2hmZ2gsIGdiZ2ZoZmdoZ2YNRmlnbGFyLCBHYXlsZQxnYXN3ZGcsIGFhMTISZ2h3Ziwgd3FyZXlxd2VyeXF3E0dvbmNoYXJlbmtvLCBOaWtpdGESR3JhbWluc2tpLCBNYXR0aGV3F2dyd2VyZ3dlcmd3ZXIsIGFnYXNkZ2FzDWd3ZXJndywgYXNkZmcRSGFsbXN0ZWFkLCBEYW5pbG8OSGFubmFtYW4sIENvbGUPSGFubmFtYW4sIExvdWlzEEhvcnNlZm9yZCwgQmVycnkSSW50ZXJuYWwsIEludGVybmFsBklRLCBJUQhJUTEsIElRMQhJUTIsIElRMghJUTMsIElRMwtJdmVyeSwgQWxkbxFLYWJhYmlrLCBXaWxsaWFtcxFLYWNoYWxvdmEsIFl1bGl5YQ5Lb3NsYW4sIEJyb29rcw9LcnVtYmVpbiwgV2F5bmUKTGVhZCwgTGVhZA9MZWhuaW5nLCBHZW5hcm8MTGV5aCwgRGFycmluGmxpbm91bm91bm9ub2l1LCBoamtqaGtqaGtqGWxpbm91bm91bm9ub2l1LCBwcm9qZWN0ZWQNTGlwaXJhLCBSb3lhbA9Mb2Z3YWxsLCBEdW5jYW4JbWFuLCBMaW9uDU1hbmFnZXIsIExpbmUSTWFyYXRvcywgRGVtZXRyaXVzDG1jLCBhZGRlZCBieQ5tYy0yLCBhZGRlZCBieRJtYy0zIG5ldywgYWRkZWQgYnkSbWMtNCB1cGQsIGFkZGVkIGJ5D01jZW5hbmV5LCBKb25hcw9NY2dsb2NrdG9uLCBIYWkRTWNndWlyayAsIEVtZXJzb24STWNuZXNwZXkgLCBEYXJyaWNrDk1lcmtsZXksIEphc29uDk1ldGVlciwgRGFtaWVuEU1vbnRyb3NlLCBPY3RhdmlvEm5ldyB0ZXN0LCBuZSB3dGVzdAxvYXppcywgb2F6aXMOb2F6aXMxLCBvYXppczEPT2NoaW5hbmcsIEl2b3J5HFBlcnNvbiAxIHdpdGgsIFBlcnNvbiAxIHdpdGgiUGVyc29uIDIgd2l0aG91dCwgUGVyc29uIDIgd2l0aG91dBRQZXJzb25qdWQsIFBlcnNvbmp1ZA9QZXR0aWJvbmUsIE9sZW4IcG9yLCBwb3IMcXdlc3QsIHF3ZXN0DXJlYywgYWRkZWQgYnkIUkVDLCBSRUMPcmVjLTIsIGFkZGVkIGJ5EFJFTEVBU0UsIFJFTEVBU0UYUkVMRUFTRSBSRUMsIFJFTEVBU0UgUkVDEVNoZW13ZWxsLCBRdWVudGluEVN0YXRoYW0gLCBXaWxsaWFuEHRhdGFhdCwgdGF0YXRhdGERVGVzdGVyb3YsIG5vIHJvbGURVmFudGFzc2VsbCwgU2hhdW4OV2VpdHptYW4sIFNhbmcUd2Vyd2Vyd2VyLCBld3J3ZXJyd2URd2Vyd3J3ZXIsIGVyd2V3ZXILWW9wcCwgQ3JhaWcVdQQzNjQxBDM2NDYEMzY5OQQzNjQ1BDM2NDcEMzcxMAQzNjUxBDM2NTIEMzcyMAQzNTY4BDM2ODIEMzY4MwQzNjY0BDM2NjUEMzY2NwQzNzAzBDM3MTMEMzY5MwQzNzExBDM2OTEEMzcxMgQzNTU1BDM1NzEEMzU5MwQzNTQ3BDM2NzABMQQzNTc5BDM0MzgEMzUzNQQzNjcyBDM3MTkEMzU1MgQzMTg5BDM3MDQEMzcxNwQzNTc1BDM1NTgEMzY4NgQzNTY2BDM2MjgEMzUwMgQzNjg1BDM2OTAEMzQzMgQzNjMxBDM1OTQEMzY4NAQzNjYyBDM3MDgEMzY2NgQzNTg5BDM2NDIEMzY2MwQzNjQ5BDM0MzEEMzY2MQQzNjYwBDM1OTEEMzUxMQQyNzI4BDM1NjIEMzY4OAQzNjc3BDM2NzgEMzY3OQQzNjgwBDM1ODgEMzU3MgQzNzE4BDM1NTMEMzU4MgQzNjczBDM1NjcEMzAzNAQzNjk3BDM2OTYEMzQ0OQQzNjMyBDM2NzYEMzY3NQQzNTYwBDM2NTUEMzY1NgQzNjU4BDM2NTcEMzYzOAQzNTQzBDM2MzkEMzU1NwQzNDUwBDM1ODYEMzQ1MgQzNzAxBDM3MDYEMzcwNwQzNTA1BDM3MTUEMzcxNgQzNzA1BDM1ODQEMzcwMgQzNzA5BDM2NTMEMzY4OQQzNjU0BDM3MjMEMzcyNAQzNDU0BDM2MzMEMzY4NwQzNjk4BDM2NDAEMzYzNgQzNjc0BDM3MDAEMzU3OBQrA3VnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dkZAIpDw8WAh8KaGRkAgUPZBYIAgEPZBYCAgEPZBYCAgMPZBYEZg88KwANAGQCAg8PZA8QFgFmFgEWAh4OUGFyYW1ldGVyVmFsdWVkFgECBGRkAgIPZBYCAgEPZBYMAgEPEA8WAh4HQ2hlY2tlZGdkZGRkAgMPDxYEHwMFBDAuMDEfCmhkZAILDw8WBB8KaB8GaGRkAg0PDxYEHwMFASofBmhkZAIPDw8WBB8DBQEqHwZoZGQCEQ8QDxYCHwZnZA8WAmYCARYCEGRkZxBkZGcWAQIBZAIDD2QWAgIBD2QWBGYPZBYCAgEPPCsADQBkAgIPD2QPEBYBZhYBFgIfDmQWAQIEZGQCBQ9kFgICAQ9kFgQCAQ9kFgICAw9kFgJmD2QWBAIBD2QWAgIBDzwrAA0AZAIDDw9kDxAWAmYCARYCFgIfDmQWBB4MRGVmYXVsdFZhbHVlBQEyHw5kFgICBAIDZGQCAw9kFgICAg9kFgJmD2QWDgIBDw8WBB8DBQdEaXNwbGF5HgdWaXNpYmxlaGRkAgMPEA8WCB8NBQVWYWx1ZR8MBQNLZXkfAmcfEWhkEBUICkFsbCBldmVudHMLRXJyb3JzIG9ubHkMUGVyc29ucyBvbmx5DVRhcmdldCBQZXJzb24NUHJvamVjdHMgb25seRdQcm9qZWN0cyBhbmQgbWlsZXN0b25lcwxUaW1lIEVudHJpZXMNT3Bwb3J0dW5pdGllcxUIA0FsbAVFcnJvcgZQZXJzb24MVGFyZ2V0UGVyc29uB1Byb2plY3QUUHJvamVjdEFuZE1pbGVzdG9uZXMJVGltZUVudHJ5C09wcG9ydHVuaXR5FCsDCGdnZ2dnZ2dnFgECBGQCBQ8QZGQWAQIDZAIHDxBkEBXlAQhhbnkgdXNlcgs1MTIsIGFiY2RlZhFBIHByb2ogc2F2ZSwgVGVzdAxBYTEsIEhleSB5b3UKQWEyNCwgVGVzdBphYWFhYWFhYWFhYWFhLCBhYWFhYWFhYWFhYQphYmMyLCBMaW9uDEFjdGl2ZSwgVGVzdA5BY3RpdmUtMiwgVGVzdBJhZGFkYWRhLCBkYWRhZGFkYWQTQWRkZWQgYnksIFJlY3J1aXRlchVBZGRlZCBieSwgUmVjcnVpdGVyLTIMYWdhaW4sIGFnYWluEEFraGFuZCwgSGVjdG9yIDEKQWt2YSwgQWt2YQpBbGV4LCBBbGV4CkFsbGEsIEFsbGEQQWx2aXJleiwgU3RhbnRvbgpBbm5hLCBBbm5hDGFudGV5LCBBbnRleQxBbnRvbiwgQW50b24MQXByaWwsIEFwcmlsCmFyZWMxLCBkYXIMYXJycnIsIGFyYXJyDGFydHVyLCBhcnR1chFhc3Nzc3NzLCBhc3Nzc3Nzcw1hc3dneXIxMywgNTEyDGF0ZXN0IDEsIHJlYwphd3d3LCBhd3d3DEF4eHh4LCBBeHh4eA1CYWNtYW4sIERhcmlvDUJhbGQsIEFsYmVydG8MQmFsZCwgV2VzbGV5DkJhbGxhciwgSGVyYiAxDUJhc2VsZXksIERlb24SQmF1bWtpcmNobmVyLCBDdXJ0GWJiYmJiYmJiYmJiLCBiYmJiYmJiYmJiYmIRQmVoYW5hbiwgQmVuZWRpY3QOQmhhc2thciwgSm9yZ2UOQmhhc2thciwgUGVyY3kRQmxlc3NldHQsIERlc21vbmQQQnVtYnJheSwgSWduYWNpbwlieSwgYnVzc3kJQ2FuYWssIFR5EUNhcmFiZWxsbywgQ2FybG9zEUNoYWxhYmFuLCBPcmxhbmRvEENoYW5jaHVhbiwgQnJvY2sSQ2hhbmNodWFuLCBUZW9kb3JvDUNvY3JhbiwgSGlyYW0WY29uc3VsdGFudCwgY29uc3VsdGFudAtDb3VleSwgRXJpbgxDcnVlbCwgRnJpdHoOY3ZiY3ZiLCBmZ2J2dmIOQ3lsZXIsIEFsZm9uem8LQ3lsZXIsIEFsdmEPRGF2eWRvdiwgQnJhZGx5DkRFRkVDVCwgREVGRUNUDURlam9vZGUsIEdsZW4TRGVtb3N0aGVuZXMsIFNlcmdpbxFEZXJlbnppcywgU3RlcGhhbg9EZXJyZXIsIE1hcnF1aXMQRGVzaG90ZWwsIElzaWRybxBEZXNob3RlbCwgUm9ubmllDURpYnJpbm8sIERpY2sPRGltYXVybywgV2FsdG9uDURpc2NoZXIsIFJ5YW4SRG9sZ29wb2xvdmEsIEp1bGlhDkRvbGl2ZWlyYSwgUmV5DERvbHlhLCBBcnRlbQ9Eb3JjZW50LCBNYXJ2aW4MRHJhYSwgSnVzdGluE0R1YnJldWlsLCBIZXJpYmVydG8MRHVyb2wsIE5vbGFuD0R6aWR1Y2gsIEplc3NpZQtlZWUsIGVlZWVlZRFFaGlnaWF0b3IsIEFybm9sZBFFaWNoc3RhZHQsIFllcy1ubw1Fa2xvdiwgR2VyYWxkEUVsbGVya2FtcCwgTHVjaWVuD0VuZ2xlbWFuLCBCdWRkeRBlcnRlcnRlLCBlcnRldGV0EGVyd2VyZXIsIHJ3cndlcnITRXN0ZXJsaW5nLCBEZW1hcmN1cw1FdGhlbCwgSmVyYW15EEV2YW5jaHlrLCBSYXNoYWQSRXZhbmNoeWssIFdpbGxpYW1zDkZhbGFjY28sIER3YWluDkZhbGFjY28sIE1vc2hlDEZhbnRhLCBGYW50YQxmZHNhLCB3ZXJ0d3EMRmVub2ZmLCBDYXJ5EmZnZGdkZ2ZkZywgZmZkZ2ZmZxJmZ2hmZ2gsIGdiZ2ZoZmdoZ2YNRmlnbGFyLCBHYXlsZQ1GbHVlY2ssIEJsYWtlD0ZvcnN0b24sIEZlbGlwZQ1GdXJuZSwgU2hheW5lD0Z1cm5lLCBUaGVvZG9yZQ9HYW56LCBGcmFuY2lzY28MZ2Fzd2RnLCBhYTEyEmdod2YsIHdxcmV5cXdlcnlxdxJHaWFjb21henppLCBEZWxtZXIMR2liYiwgRGlsbG9uE0dvbmNoYXJlbmtvLCBOaWtpdGESR3JhbWluc2tpLCBNYXR0aGV3F2dyd2VyZ3dlcmd3ZXIsIGFnYXNkZ2FzDkd1ZW5pbiwgS2VlbmFuDWd3ZXJndywgYXNkZmcRSGFsbXN0ZWFkLCBEYW5pbG8OSGFubmFtYW4sIENvbGUPSGFubmFtYW4sIExvdWlzEEhlYWRsb24sIEFudG9pbmUQSG9yc2Vmb3JkLCBCZXJyeQ5JbmFjdGl2ZSwgVGVzdBJJbnRlcm5hbCwgSW50ZXJuYWwGSVEsIElRCElRMSwgSVExCElRMiwgSVEyCElRMywgSVEzC0l2ZXJ5LCBBbGRvC0phbm93LCBUb3J5EUthYmFiaWssIFdpbGxpYW1zEUthY2hhbG92YSwgWXVsaXlhEEthcnJlbHMsIENhbWVyb24OS2F6YWJpLCBFbGlqYWgRS2xpbmdhbWFuLCBKb3NodWEMS25vcnAsIE1vbnR5EUtvc2FyZWZmLCBVbHlzc2VzDktvc2xhbiwgQnJvb2tzD0tydW1iZWluLCBXYXluZQtLcnV6ZWwsIFNpZA1LdXRsdSwgUmlja2llDExhbWFuLCBFbG1lcgxMYW56ZSwgQmVubnkQTGF0aW1vcmUsIEpvcmRhbhFMYXRpbW9yZSwgUm9kcmlnbw1MYXZnbGUsIEVmcmVuDUxhemlvLCBDYWx2aW4KTGVhZCwgTGVhZA1MZWFuemEsIExvdWllD0xlaG5pbmcsIERhbGxhcw9MZWhuaW5nLCBHZW5hcm8RTGVwZXRpY2gsIEx5bndvb2QMTGV5aCwgRGFycmluDkxpZXdhbGQsIEdhdmluEExpbmRibG9tLCBEYXJyaW4RTGluZGJsb20sIEZyYW5jZXMabGlub3Vub3Vub25vaXUsIGhqa2poa2poa2oZbGlub3Vub3Vub25vaXUsIHByb2plY3RlZA1MaXBpcmEsIFJveWFsD0xvZndhbGwsIER1bmNhbg9Mb3ZlcmRpLCBEb3JzZXkLTHV6aSwgQnVkZHkRTWFjdXJkeSwgU3RlcmxpbmcJbWFuLCBMaW9uDU1hbmFnZXIsIExpbmUSTWFyYXRvcywgRGVtZXRyaXVzDU1hcmF0b3MsIE93ZW4OTWFyaW5rbywgS29yZXkMTWF0aGVuLCBFcmluDU1hdGhlbiwgV2lsbHkMbWMsIGFkZGVkIGJ5Dm1jLTIsIGFkZGVkIGJ5Em1jLTMgbmV3LCBhZGRlZCBieRJtYy00IHVwZCwgYWRkZWQgYnkPTWNlbmFuZXksIEpvbmFzDk1jZW5hbmV5LCBNaWxvEE1jZ2FmZmVlLCBMYXZlcm4PTWNnbG9ja3RvbiwgSGFpEU1jZ3VpcmsgLCBFbWVyc29uDk1jbGVyb3ksIEphbWVsDU1jbGlsbHksIEx5bm4STWNuZXNwZXkgLCBEYXJyaWNrD01jbmVzcGV5LCBJcndpbhJNY25lc3BleSAsIEphY3F1ZXMOTWVlZHMsIENsZW1lbnQOTWVya2xleSwgSmFzb24OTWV0ZWVyLCBEYW1pZW4PTWlsbHN0ZWFkLCBXaWxsEE1vbmZvcmUsIENhbWVyb24NTW9ua3MsIE1vbnJvZQ1Nb25yb3csIEtlbm55EE1vbnRyb3NlLCBHZXJhbGQRTW9udHJvc2UsIE9jdGF2aW8TTW9vZGlzcGF1Z2gsIEpvaG5pZRNNb29kaXNwYXVnaCwgUmFmYWVsE01vdHRlc2hhcmQsIENhbWVyb24RTW90dGVzaGFyZCwgVmluY2UPTXVsbGlzb24sIEVkZ2FyEm5ldyB0ZXN0LCBuZSB3dGVzdAhOT1QsIE5PVAxvYXppcywgb2F6aXMOb2F6aXMxLCBvYXppczEPT2NoaW5hbmcsIEl2b3J5DE9zbW9uZCwgQW1vcxFQYXNjYW5paywgTWljaGVhbAxQZWxsb20sIEN1cnQcUGVyc29uIDEgd2l0aCwgUGVyc29uIDEgd2l0aCJQZXJzb24gMiB3aXRob3V0LCBQZXJzb24gMiB3aXRob3V0FFBlcnNvbmp1ZCwgUGVyc29uanVkD1BldHRpYm9uZSwgT2xlbhFQb250YnJpYW5kLCBDb3JleQhwb3IsIHBvcgxxd2VzdCwgcXdlc3QNcmVjLCBhZGRlZCBieQhSRUMsIFJFQw9yZWMtMiwgYWRkZWQgYnkPUmVkZmVybiwgSXNhaWFoEFJFTEVBU0UsIFJFTEVBU0UYUkVMRUFTRSBSRUMsIFJFTEVBU0UgUkVDD1JlbndpY2ssIEh1bnRlcgxyZW9kLCByZWNvcmQPUmV2aWxsYSwgUm9iYmllD1JvZ2FjaGV2YSwgT2xnYQ9TaGVtd2VsbCwgTm9sYW4RU2hlbXdlbGwsIFF1ZW50aW4OU2lybW9ucywgVGVkZHkRU3RhdGhhbSAsIFdpbGxpYW4QdGF0YWF0LCB0YXRhdGF0YRFUZXN0ZXJvdiwgbm8gcm9sZRFWYW5kZXJoZXlkZW4sIEdpbBFWYW50YXNzZWxsLCBTaGF1bgxXYWRhLCBKYXJyb2QOV2VpdHptYW4sIFNhbmcUd2Vyd2Vyd2VyLCBld3J3ZXJyd2URd2Vyd3J3ZXIsIGVyd2V3ZXIPV2llZGVtYW4sIENhbGViCFdXVywgV1dXC1lvcHAsIENyYWlnFeUBAAQzNjU5BDM2NDgEMzY0MQQzNjQ2BDM2NjkEMzY5OQQzNjQ1BDM2NDcEMzcxMAQzNjUxBDM2NTIEMzcyMAQzNTY4BDM2ODIEMzY4MwQzNjY0AzI0MAQzNjY1BDM2NjcEMzY4MQQzNzAzBDM3MTMEMzY5MwQzNzExBDM2OTEEMzY0MwQzNzEyBDM2OTIEMzY5NQQzNTkwBDM2MzcEMzU1NQQzNTcxBDI3MjkEMzU5MwQzNjcxBDM1NDcEMzU2OQQxMjc4BDMxNDcEMjY4MwQzNjcwATEEMzU3OQQzNTczBDM0MzgEMzUzNQQzNTc2BDM2NzIEMzU1OQQyNzI1BDM3MTkEMzQ0NgQzNTUyBDM1NTYEMzcyMQQzNTUxBDM0MzQEMzE4OQQzNTgwBDM0NDIEMjcyNgE2BDI3MzEEMzQ2MAQzNzA0BDE4MDAEMzcxNwQzNTE5BDM1NzUEMzU4NwQzNTE0BDM1NTgEMzY4NgQzNDU5BDM1NjYEMjczNgQzNjI4BDM1MDIEMzY4NQQzNjkwBDM0MzIEMzQ0MQQzNDQzBDM2MzAEMzYzMQQzNTk0BDM2ODQEMzY2MgQzNDM3BDM3MDgEMzY2NgQzNTg5BDM0MzYEMzYzNAQyNzM1BDM1NjUEMzU0MQQzNjQyBDM2NjMEMzUyMAQzNTUwBDM2NDkEMzQzMQQzNjYxBDI3MjQEMzY2MAQzNTkxBDM1MTEEMjcyOAQzNTkyBDM1NjIEMzY0NAQzNjg4BDM2NzcEMzY3OAQzNjc5BDM2ODAEMzU4OAQzMTg4BDM1NzIEMzcxOAQzNDQ4BDM1NDUEMzU0NgQzNjI5BDM1NDkEMzU1MwQzNTgyBDM1ODMEMzQ0NAQzNDUzBDM1MTYEMzUxNwQzNTQ4BDM1NjEEMzQ3OAQzNjczBDI2ODIEMzU4NQQzNTY3BDI3MzAEMzAzNAQzNTgxBDM1MjYEMzQzMwQzNjk3BDM2OTYEMzQ0OQQzNjMyBDM1NDAEMzU3MAQzNDUxBDM2NzYEMzY3NQQzNTYwBDM0MzUEMzU2MwQzNTQ0BDM0NDUEMzY1NQQzNjU2BDM2NTgEMzY1NwQzNjM4BDM0NDAEMjY4MQQzNTQzBDM2MzkDMjQxBDI3MzQEMzU1NwQzNTY0AzkzMwQyNzMyBDM0NTAEMzU4NgQzNTQyBDM0MzAEMjcyNwM2NDMEMjIwNwQzNDUyATIEMzUwMwQzNTE4BDM1NzcDMjM5BDM3MDEEMzY2OAQzNzA2BDM3MDcEMzUwNQQyNzMzAzgxNwQzNDk3BDM3MTUEMzcxNgQzNzA1BDM1ODQEMzU3NAQzNzAyBDM3MDkEMzY1MwQzNjg5BDM2NTQDODc1BDM3MjMEMzcyNAQxMjc3BDM3MTQEMzUxMAQzNzIyBDM2MzUEMzQ1NAQzNDM5BDM2MzMEMzY4NwQzNjk4BDM1MTUEMzY0MAQzNTIxBDM2MzYEMzY3NAQzNzAwBDM0NDcEMzY5NAQzNTc4FCsD5QFnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnFgFmZAIJDxAPFgYfDQUETmFtZR8MBQJJZB8CZ2QQFe0BDEFsbCBwcm9qZWN0cxNJdmMgdGVzdCBhZGQgY2xvbmVkFFByb2plY3QgTWFuYWdlciB0ZXN0HVByb2plY3QgTWFuYWdlciB0ZXN0IChjbG9uZWQpHVByb2plY3QgTWFuYWdlciB0ZXN0IChjbG9uZWQpJlByb2plY3QgTWFuYWdlciB0ZXN0IChjbG9uZWQpIChjbG9uZWQpFDExMTEgdXBkYXRlIGJ5IEFwcmlsCG5ldyB0ZXN0CG5ldyB0ZXN0CG5ldyB0ZXN0CG5ldyB0ZXN0CG5ldyB0ZXN0C3BlcmYgbmV3X3VwBHRlc3QEcndlcgxBbGxhIHByb2plY3QMQWxsYSBwcm9qZWN0DEFsbGEgcHJvamVjdAQ1NTU1BDU1NTUENTU1NQQ1NTU1BGFhMjQJc2FsZSB0ZXN0IEFQRVggQXp1cmUgQ29tcGV0aXRpdmUgTGFuZHNjYXBlB1JFTEVBU0URRWxlY3Ryb25pY3MgQWxsZW4RRWR1Y2F0aW9uIEV2ZXJldHQOUmV0YWlsIFF1aW50aW4VUGhhcm1hY2V1dGljYWwgVGhvbWFzFVBoYXJtYWNldXRpY2FsIFF1aW5jeRFBdXRvbW9iaWxlIFdhcm5lchVDb25zdW1lciBHb29kcyBEdWRsZXkZQ29tcHV0ZXIgU29mdHdhcmUgRXN0ZWJhbg9BdXRvbW9iaWxlIEFsYW4NRW5lcmd5IERvcnNleQ5BaXJjcmFmdCBNZXJsZRFBaXJjcmFmdCBDb2x1bWJ1cxFSZWFsIEVzdGF0ZSBMZXdpcw5IYXJkd2FyZSBXYXluZRhGb29kIGFuZCBCZXZlcmFnZXMgTWFsaWsTSGVhbHRoIENhcmUgUmFuZGFsbBFIYXJkd2FyZSBHZW9mZnJleQxNZWRpYSBNYXJjb3McRmluYW5jaWFsIFNlcnZpY2VzIEZyZWRlcmljaw9FZHVjYXRpb24gSmVzdXMTSGVhbHRoIENhcmUgU3RhbmxleRFCYW5raW5nIENsZXZlbGFuZBpDb21wdXRlciBTb2Z0d2FyZSBQYXRyaWNpYRZQaGFybWFjZXV0aWNhbCBOZXZpbGxlEEVkdWNhdGlvbiBCcm9va3MZRm9vZCBhbmQgQmV2ZXJhZ2VzIFRhbm5lcg5DaGVtaWNhbHMgUm9yeQ9IYXJkd2FyZSBSZXViZW4PRWR1Y2F0aW9uIERhcmVuGENvbnN1bWVyIEdvb2RzIEZyYW5jaXNjbxZDb25zdW1lciBHb29kcyBTY290dGllEkdvdmVybm1lbnQgQW50b25pYQ9MZWlzdXJlIERlYW5kcmUTTWFudWZhY3R1cmluZyBJc2FhYxNFZHVjYXRpb24gRG9taW5pcXVlEEVkdWNhdGlvbiBMZW11ZWwOSGFyZHdhcmUgRmlkZWwRSW5zdXJhbmNlIFJvbGxhbmQUUGhhcm1hY2V1dGljYWwgUm9tYW4QRWxlY3Ryb25pY3MgV2lsbBNSZWFsIEVzdGF0ZSBTaGVybWFuC01lZGlhIEpvcmdlEEVuZXJneSBGcmFuY2VzY28OQmFua2luZyBJc3JhZWwXRmluYW5jaWFsIFNlcnZpY2VzIFZpdG8SSGVhbHRoIENhcmUgRW1pbGlvGEZpbmFuY2lhbCBTZXJ2aWNlcyBUZXJyeRBFZHVjYXRpb24gV2VsZG9uFUNvbnN1bWVyIEdvb2RzIEplcmVteRhGb29kIGFuZCBCZXZlcmFnZXMgRGF2aXMPSW5zdXJhbmNlIERhcmlvFENvbnN1bWVyIEdvb2RzIEVscm95EUluc3VyYW5jZSBDbGludG9uFkNvbXB1dGVyIFNvZnR3YXJlIExlb24OQWlyY3JhZnQgUnViZW4WQ29tcHV0ZXIgU29mdHdhcmUgRG91ZxFIYXJkd2FyZSBMYXdyZW5jZRpGaW5hbmNpYWwgU2VydmljZXMgSWduYWNpbw5TZXJ2aWNlIFJvYmVydBNFbGVjdHJvbmljcyBDYW1lcm9uEVJlYWwgRXN0YXRlIFJ1c3R5D0F1dG9tb2JpbGUgT2xpbhlDb21wdXRlciBTb2Z0d2FyZSBHZXJhbGRvE01hbnVmYWN0dXJpbmcgSmFtZXMNQ2hlbWljYWxzIEdpbBJFbGVjdHJvbmljcyBBbmRyZXMPQWlyY3JhZnQgRWR3YXJkD1NlcnZpY2UgSmFjaW50bxFJbnN1cmFuY2UgRGVzbW9uZA1CYW5raW5nIENvcmV5D0FpcmNyYWZ0IEp1ZHNvbhZNYW51ZmFjdHVyaW5nIEpvbmF0aGFuFUNvbnN1bWVyIEdvb2RzIFBhbG1lcgxSZXRhaWwgTGFtYXIQQ2hlbWljYWxzIFBpZXJyZQ5FZHVjYXRpb24gRXJpYw1TZXJ2aWNlIFdpbGV5EEFpcmNyYWZ0IFN0ZXdhcnQLUmV0YWlsIFRvYnkPRWR1Y2F0aW9uIEJ1ZGR5EkVsZWN0cm9uaWNzIEtlbGxleRJQaGFybWFjZXV0aWNhbCBEb24SRWxlY3Ryb25pY3MgUG9ydGVyDUVuZXJneSBNYXJ0aW4ZRm9vZCBhbmQgQmV2ZXJhZ2VzIEF1Z3VzdBRNYW51ZmFjdHVyaW5nIFdpbGxpcw1FbmVyZ3kgR2FzdG9uE0NvbnN1bWVyIEdvb2RzIFBhdWwTSXZjIHRlc3QgYWRkIGNsb25lZA5IYXJkd2FyZSBDaG9uZw9FZHVjYXRpb24gVGltbXkSTWFudWZhY3R1cmluZyBNaWtlFENvbnN1bWVyIEdvb2RzIFBlcnJ5EFJldGFpbCBGcmFuY2VzY28RQWlyY3JhZnQgR2FyZmllbGQbUG51bSB0ZXN0IChjbG9uZWQpIChjbG9uZWQpCVBudW0gdGVzdBJQbnVtIHRlc3QgKGNsb25lZCkSUG51bSB0ZXN0IChjbG9uZWQpElBudW0gdGVzdCAoY2xvbmVkKRtQbnVtIHRlc3QgKGNsb25lZCkgKGNsb25lZCkbUG51bSB0ZXN0IChjbG9uZWQpIChjbG9uZWQpG1BudW0gdGVzdCAoY2xvbmVkKSAoY2xvbmVkKRJQbnVtIHRlc3QgKGNsb25lZCkTSXZjIHRlc3QgYWRkIGNsb25lZBNJdmMgdGVzdCBhZGQgY2xvbmVkE0l2YyB0ZXN0IGFkZCBjbG9uZWQJVGVzdGJ1Y2tzDEl2YyB0ZXN0IGFkZA5TZXJ2aWNlIEdlb3JnZRJDaGFyZ2VhYmlsaXR5IHRlc3QIMTIzNDVfNjcDMTIzB2Vyd2VyZXIIVEVTVF8xMTEGNTQxMzQ2BjUxMiBwchFSZWFsIEVzdGF0ZSBDbGF1ZANidWcFZmdkZmcHMzMzMzMzMwRKdW5lBEp1bmUESnVuZQRKdW5lBEp1bmUNUmV0YWlsIFRyYXZpcwkyMjIyMjIyMjIHcnRlcnRldARUUkFQCVNhbGVfVGVzdAlKdW5lLUp1bHkBMQEyBHRldHMGdGVzdGlrBDIwMjcLSnVsaWEncyBvbmUIRGlzY291bnQFTUlSUkEJcGVyZiB0ZXN0CXBlcmYgdGVzdAtKdW5lX3VwZGF0ZQJPTgtUdWVzZGF5X25ldwtUdWVzZGF5X25ldwtUdWVzZGF5X25ldwtUdWVzZGF5X25ldwZxd2VydHkPUHJhY01hbiBwcm9qZWN0GEVkdWNhdGlvbiBPcmxhbmRvIGNsb25lZApuZXcgZGVzaWduD1Rlc3QxMTExX3VwZGF0ZQpKdXN0IGFmdGVyBjEyMzEyMwRKdW5lCkVuZXJneSBIYWkaRmluYW5jaWFsIFNlcnZpY2VzIFphY2hhcnkPSW5zdXJhbmNlIEVyd2luFEVsZWN0cm9uaWNzIE5vcmJlcnRvEUVsZWN0cm9uaWNzIENhcmV5DkxlaXN1cmUgSmVyb2xkDU1lZGlhIEVtZXJzb24VTWFudWZhY3R1cmluZyBCZXJ0cmFtFk1hbnVmYWN0dXJpbmcgU3RlcmxpbmcRRWxlY3Ryb25pY3MgTWF1cm8QQ2hlbWljYWxzIEhhcmxhbiRBenVyZSBBcHBsaWNhdGlvbiBNaWdyYXRpb24gQW5hbHlzaXMnRlkxMCBBenVyZSBBcHBsaWNhdGlvbiBQcm9maWxlIEd1aWRlbmNlCEJJUlRIREFZC1NhbGVfVGVzdF8xBFFRUVEJZHNmc2Rmc2ZkCkV4Y2VsbGVudCEFQWRtaW4Jc2FsZSB0ZXN0CXNhbGUgdGVzdAx0ZXN0IHByb2plY3QDNDM1D25ldyBvcHBvcnR1bml0eRFFZHVjYXRpb24gT3JsYW5kbwlzYWxlIHRlc3QENTU1NQdNUyBURVNUAk9OCVBSTUExdGVzdARtaW5lBU9XTkVSC2ZvciBwcm9qZWN0D1R1ZXNkYXkgcHJvamVjdARCRVNUBlNUUkVMQRVsYWxhbGFsYWxhYWwgKGNsb25lZCkGSnVsaW5hCVBNIGNoYW5nZRJQTSBjaGFuZ2UgLSB0ZXN0IDIQcG0gY2hhbmdlIHRlc3QgMxFwbSBjaGFuZ2UgdGVzdCAzIA9NZWRpYSBTdGVwaGFuIDEJUHJhY01hbiAxBDE0NTQKRVVST1BFMV91cA5IYXJkd2FyZSBSaGV0dBpGaW5hbmNpYWwgU2VydmljZXMgQXJtYW5kbw1uZXcgd2VlayB0ZXN0EHBtIGNoYW5nZSB0ZXN0IDQIZWVlZWVlZWUMQWlyY3JhZnQgSGFpCUJFU1QgdGVzdBJJbnN1cmFuY2UgSmVyZW1pYWgKVGltZSBFbnRyeRXtAQADMTc2AzE5OAMxOTkDMjAwAzIwMQMyNDEDMjQyAzI0MwMyNDQDMjQ1AzI0NgMyNDcDMjQ4AzI0OQMyNTADMjUxAzI1MgMyNTMDMjU0AzI1NgMyNTcDMjYwAzI2NgMyOTQDMzA5AjI2AjI4AjIzAjI0AjIyAjM0AjM2AjM5AjI5AjE2AjE4AjU2AjMzAjU0AjQ2AjE1AjQxAjcwAjY1AjcxAjM3AjM1AjYzAjIxAjMwAjQ4AjQwAjY5AjU5AjY4AjY2Ajc4Ajc0Ajc1AjgzAjQ3Ajg3Ajg5AjQyAjc5AjcyAjk3AjkyAjkzAjg1Ajk2AjczAjY3AjgwAjc3AjgyAjY0AjMxAjI3AjI1AjIwAjE3Ajk4AzEwMQI5MAMxMTcDMTAwAzExNAMxMTIDMTE2AzEyMwI0MwMxMzMDMTM3AzEzNQMxMTgDMTA3AzE0MgMxMTADMTQ3AzE1MwMxMzkCOTQDMTAyAjU3Ajk5AzE0NgMxMDQDMTUwAzE1NwMxNjYDMTUyAzE2MAMxODUDMTY3AzE3MAMxNjIDMTY4AzEzNAMxMDMDMjAyAzE4OQMxOTADMTkxAzE5MgMxOTMDMTk0AzE5NQMxOTYDMTg2AzE4NwMxODQDMTczAzE3NAI4MQMxOTcDMjA3AzIxMQMyMTkDMjI4AzIwNgMyMTQDMTE1AzI3MwMyNzQDMjc1AzI3NwMyNzgDMjc5AzI4MAMyODIDMTA2AzI2OQMyNzADMjg0AzI4NQMyODkDMjMwAzIzMQMyMTUDMjE2AzIzNAMyMzUDMjg3AzIyNwMyNjgDMjcxAzI3NgMyMzgDMjYxAzI2MgMyNjMDMjY0AzIwOAMyMDkDMTg4AzI4OAMyOTUDMjk2AzI5NwMyODMDMTA5AzExMwMxMjcDMTU4AzE1OQMxNTUDMTM2AzEwNQI5MQMxMzADMTU0AzI5MgMyOTMDMjkxAzI4NgMyNjUDMjMyAzMwOAMzMDMDMzA1AzMwNgMyNzIDMjA1AzMwNAMxNDEDMzA3AzI1NQMyODEDMjM5AzI0MAMyNjcDMjM2AzIzNwMyNTgDMjEyAzIxNwMyMjUDMjI2AzI5OAMyOTkDMzAwAzMwMQMxNjkDMjEwAzIwNAMyMzMDMTQ1AzEyMgMyNTkDMzAyAzIyOQMxMjYDMjEzAzE0MAMxNzIUKwPtAWdnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZxYBZmQCDQ88KwANAGQCDw8PZA8QFgVmAgECAgIDAgQWBRYCHw4FATQWAh8OZRYCHw4FB1Byb2plY3QWAh8OZRYCHw5kFgVmZmZmZmRkAgMPD2QPEBYEZgIBAgICAxYEFgIfDmQWAh8OZBYCHw5kFgIfDmQWBAIDAgMCAwIDZGQYBwUjY3RsMDAkYm9keSRhY3Rpdml0eUxvZyRndkFjdGl2aXRpZXMPZ2QFD2N0bDAwJGxvZ2luVmlldw8PZAIBZAUpY3RsMDAkYm9keSRtaWxlc3RvbmVzJGd2UmV2ZW51ZU1pbGVzdG9uZXMPZ2QFG2N0bDAwJGJvZHkkblByb2plY3QkZ3ZOb3Rlcw9nZAUdY3RsMDAkYm9keSRtdlByb2plY3REZXRhaWxUYWIPD2RmZAUbY3RsMDAkYm9keSRwZXJzb25zJGd2UGVvcGxlD2dkBR5fX0NvbnRyb2xzUmVxdWlyZVBvc3RCYWNrS2V5X18WAwUXY3RsMDAkbG9naW5TdGF0dXMkY3RsMDEFF2N0bDAwJGxvZ2luU3RhdHVzJGN0bDAzBRpjdGwwMCRib2R5JGNoYklzQ2hhcmdlYWJsZaeqni+iLopq7tpyfz7QZSg0tEQB" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__ASYNCPOST" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/ProjectDetail.aspx" ThinkTime="7" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="x-microsoftajax" Value="Delta=true" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam30.returnTo" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?returnTo=" />
            <RuleParameter Name="EndsWith" Value="|" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam39.ctl00$body$txtProjectName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtProjectName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam40.ctl00$body$txtClientDiscount" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtClientDiscount" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam41.ctl00$body$btnSave" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_btnSave" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam43.ctl00$body$ddlProjectStatus" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Act" />
            <RuleParameter Name="Index" Value="4" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam44.ctl00$body$ddlClientName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;121" />
            <RuleParameter Name="Index" Value="8" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam45.ctl00$body$ddlProjectGroup" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Def" />
            <RuleParameter Name="Index" Value="28" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam46.ctl00$body$ddlPractice" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;202" />
            <RuleParameter Name="Index" Value="31" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam47.ctl00$body$ddlSalesperson" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Ley" />
            <RuleParameter Name="Index" Value="186" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam48.ctl00$body$ddlProjectManager" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Aa1" />
            <RuleParameter Name="Index" Value="46" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="returnTo" Value="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjects.aspx" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjects.aspx" CorrelationBinding="{{QueryStringParam29.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00$scriptManager" Value="ctl00$body$upnlBody|ctl00$body$ddlPractice" RecordedValue="ctl00$body$upnlBody|ctl00$body$ddlPractice" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN2.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="True" RecordedValue="True" CorrelationBinding="{{FormPostParam38.ctl00$hidDirtyData}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN2.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN2.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="False" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtProjectName" Value="New one for prma" RecordedValue="New one for prma" CorrelationBinding="{{FormPostParam29.ctl00$body$txtProjectName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectStatus" Value="3" RecordedValue="3" CorrelationBinding="{{FormPostParam31.ctl00$body$ddlProjectStatus}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlClientName" Value="562" RecordedValue="562" CorrelationBinding="{{FormPostParam32.ctl00$body$ddlClientName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectGroup" Value="49" RecordedValue="49" CorrelationBinding="{{FormPostParam33.ctl00$body$ddlProjectGroup}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlPractice" Value="17" RecordedValue="17" CorrelationBinding="{{FormPostParam34.ctl00$body$ddlPractice}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlSalesperson" Value="3034" RecordedValue="3034" CorrelationBinding="{{FormPostParam35.ctl00$body$ddlSalesperson}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidSalesCommissionId" Value="{{$HIDDEN2.ctl00$body$hidSalesCommissionId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectManager" Value="3641" RecordedValue="3641" CorrelationBinding="{{FormPostParam36.ctl00$body$ddlProjectManager}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidPracticeManagementCommissionId" Value="{{$HIDDEN2.ctl00$body$hidPracticeManagementCommissionId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$chbIsChargeable" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtBuyerName" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtClientDiscount" Value="2.00" RecordedValue="2.00" CorrelationBinding="{{FormPostParam30.ctl00$body$txtClientDiscount}}" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN2.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$body$ddlPractice" RecordedValue="ctl00$body$ddlPractice" CorrelationBinding="{{FormPostParam37.__EVENTTARGET}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN2.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__ASYNCPOST" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/ProjectDetail.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="x-microsoftajax" Value="Delta=true" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="returnTo" Value="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjects.aspx" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjects.aspx" CorrelationBinding="{{QueryStringParam30.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00$scriptManager" Value="ctl00$body$upnlBody|ctl00$body$btnSave" RecordedValue="ctl00$body$upnlBody|ctl00$body$btnSave" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="True" RecordedValue="True" CorrelationBinding="{{FormPostParam49.ctl00$hidDirtyData}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="False" RecordedValue="False" CorrelationBinding="{{FormPostParam42.ctl00$hidAllowContinueWithoutSave}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtProjectName" Value="New one for prma" RecordedValue="New one for prma" CorrelationBinding="{{FormPostParam39.ctl00$body$txtProjectName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectStatus" Value="3" RecordedValue="3" CorrelationBinding="{{FormPostParam43.ctl00$body$ddlProjectStatus}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlClientName" Value="562" RecordedValue="562" CorrelationBinding="{{FormPostParam44.ctl00$body$ddlClientName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectGroup" Value="49" RecordedValue="49" CorrelationBinding="{{FormPostParam45.ctl00$body$ddlProjectGroup}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlPractice" Value="17" RecordedValue="17" CorrelationBinding="{{FormPostParam46.ctl00$body$ddlPractice}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlSalesperson" Value="3034" RecordedValue="3034" CorrelationBinding="{{FormPostParam47.ctl00$body$ddlSalesperson}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidSalesCommissionId" Value="{{$HIDDEN1.ctl00$body$hidSalesCommissionId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectManager" Value="3641" RecordedValue="3641" CorrelationBinding="{{FormPostParam48.ctl00$body$ddlProjectManager}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidPracticeManagementCommissionId" Value="{{$HIDDEN1.ctl00$body$hidPracticeManagementCommissionId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$chbIsChargeable" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtBuyerName" Value="Julia" RecordedValue="Julia" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtClientDiscount" Value="2.00" RecordedValue="2.00" CorrelationBinding="{{FormPostParam40.ctl00$body$txtClientDiscount}}" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__ASYNCPOST" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$btnSave" Value="Save" RecordedValue="Save" CorrelationBinding="{{FormPostParam41.ctl00$body$btnSave}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/Projects.aspx" ThinkTime="21" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam2.ctl00$body$tcFilters$tpSearch$btnSearch" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_tcFilters_tpSearch_btnSearch" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam3.ctl00$body$mpPeriodStart$ddlMonth" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Jul" />
            <RuleParameter Name="Index" Value="14" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam4.ctl00$body$mpPeriodStart$ddlYear" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;201" />
            <RuleParameter Name="Index" Value="39" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam5.ctl00$body$mpPeriodEnd$ddlMonth" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Sep" />
            <RuleParameter Name="Index" Value="16" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam6.ctl00$body$mpPeriodEnd$ddlYear" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;201" />
            <RuleParameter Name="Index" Value="39" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam7.hiddenInputToUpdateATBuffer_CommonToolkitScripts" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Jan" />
            <RuleParameter Name="Index" Value="8" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/ProjectSearch.aspx" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam1.ctl00$body$txtSearchText" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtSearchText" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN1.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_body_tcFilters_ClientState" Value="{&quot;ActiveTabIndex&quot;:2,&quot;TabState&quot;:[true,true,true]}" RecordedValue="{&quot;ActiveTabIndex&quot;:2,&quot;TabState&quot;:[true,true,true]}" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__PREVIOUSPAGE" Value="{{$HIDDEN1.__PREVIOUSPAGE}}" RecordedValue="tpN2XBQF24o4PbkDbg6OWuUcYOGk742RN9_bZm2_vZjTsZv2SiW-U1Mavj4em8C90" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="{{$HIDDEN1.ctl00$hidDirtyData}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN1.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN1.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="True" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$cpe_ClientState" Value="false" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$mpPeriodStart$ddlMonth" Value="7" RecordedValue="7" CorrelationBinding="{{FormPostParam3.ctl00$body$mpPeriodStart$ddlMonth}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$mpPeriodStart$ddlYear" Value="2010" RecordedValue="2010" CorrelationBinding="{{FormPostParam4.ctl00$body$mpPeriodStart$ddlYear}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$mpPeriodEnd$ddlMonth" Value="9" RecordedValue="9" CorrelationBinding="{{FormPostParam5.ctl00$body$mpPeriodEnd$ddlMonth}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$mpPeriodEnd$ddlYear" Value="2010" RecordedValue="2010" CorrelationBinding="{{FormPostParam6.ctl00$body$mpPeriodEnd$ddlYear}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpMainFilters$chbActive" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpMainFilters$chbPeriodOnly" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpMainFilters$chbProjected" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpMainFilters$chbCompleted" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblClient$14" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblClient$17" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblClient$19" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblProjectGroup$31" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblProjectGroup$32" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblProjectGroup$34" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblProjectGroup$35" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblProjectGroup$36" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblProjectOwner$9" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$1" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$2" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$3" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$4" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$5" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$6" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$7" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$8" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$9" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$10" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$11" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$12" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$13" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpAdvancedFilters$cblPractice$14" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpSearch$txtSearchText" Value="new one for prma" RecordedValue="new one for prma" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcFilters$tpSearch$btnSearch" Value="Search" RecordedValue="Search" CorrelationBinding="{{FormPostParam2.ctl00$body$tcFilters$tpSearch$btnSearch}}" UrlEncode="True" />
        <FormPostParameter Name="hiddenInputToUpdateATBuffer_CommonToolkitScripts" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam7.hiddenInputToUpdateATBuffer_CommonToolkitScripts}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/ProjectSearch.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://216.182.84.20:8283/PracticeManagement/ProjectDetail.aspx?id=310&amp;returnTo=http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectSearch.aspx" ReportingName="">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="0" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam31.id" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?id=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam32.returnTo" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam50.ctl00$body$txtProjectName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtProjectName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam51.ctl00$body$txtBuyerName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtBuyerName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam52.ctl00$body$txtClientDiscount" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtClientDiscount" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam53.ctl00$body$ddlProjectStatus" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Act" />
            <RuleParameter Name="Index" Value="10" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam54.ctl00$body$ddlClientName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;121" />
            <RuleParameter Name="Index" Value="14" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam55.ctl00$body$ddlProjectGroup" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Def" />
            <RuleParameter Name="Index" Value="34" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam56.ctl00$body$ddlPractice" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;202" />
            <RuleParameter Name="Index" Value="37" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam57.ctl00$body$ddlSalesperson" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Ley" />
            <RuleParameter Name="Index" Value="192" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam58.ctl00$body$ddlProjectManager" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Aa1" />
            <RuleParameter Name="Index" Value="52" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN1.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$body$lvProjects$ctrl0$btnProjectName" RecordedValue="ctl00$body$lvProjects$ctrl0$btnProjectName" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="{{$HIDDEN1.ctl00$hidDirtyData}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN1.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN1.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="True" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtSearchText" Value="new one for prma" RecordedValue="new one for prma" CorrelationBinding="{{FormPostParam1.ctl00$body$txtSearchText}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="https://urs.microsoft.com/urs.asmx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="SOAPAction" Value="&quot;http://Microsoft.STS.STSWeb/RepLookup&quot;" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="MSURS-Client-Key" Value="359ieD9zgKlLsvL79vW6KA%3d%3d" RecordedValue="359ieD9zgKlLsvL79vW6KA%3d%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="MSURS-Patented-Lock" Value="3hbMcB%2bxjB8%3d" RecordedValue="3hbMcB%2bxjB8%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <StringHttpBody ContentType="text/xml; charset=utf-8" InsertByteOrderMark="False">PABzAG8AYQBwADoARQBuAHYAZQBsAG8AcABlACAAeABtAGwAbgBzADoAcwBvAGEAcAA9ACIAaAB0AHQAcAA6AC8ALwBzAGMAaABlAG0AYQBzAC4AeABtAGwAcwBvAGEAcAAuAG8AcgBnAC8AcwBvAGEAcAAvAGUAbgB2AGUAbABvAHAAZQAvACIAIAB4AG0AbABuAHMAOgB4AHMAaQA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhAC0AaQBuAHMAdABhAG4AYwBlACIAIAB4AG0AbABuAHMAOgB4AHMAZAA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhACIAIAB4AG0AbABuAHMAOgBzAG8AYQBwAGUAbgBjAD0AIgBoAHQAdABwADoALwAvAHMAYwBoAGUAbQBhAHMALgB4AG0AbABzAG8AYQBwAC4AbwByAGcALwBzAG8AYQBwAC8AZQBuAGMAbwBkAGkAbgBnAC8AIgA+ADwAcwBvAGEAcAA6AEIAbwBkAHkAPgA8AFIAZQBwAEwAbwBvAGsAdQBwACAAeABtAGwAbgBzAD0AIgBoAHQAdABwADoALwAvAE0AaQBjAHIAbwBzAG8AZgB0AC4AUwBUAFMALgBTAFQAUwBXAGUAYgAvACIAPgA8AEcAPgB7ADIAQwBFAEQAQgBGAEIAQwAtAEQAQgBBADgALQA0ADMAQQBBAC0AQgAxAEYARAAtAEMAQwA4AEUANgAzADEANgBFADMARQAyAH0APAAvAEcAPgA8AE8APgB7ADYAQwAyAEIARABBADQAQQAtADUANgBDADQALQA0ADEAMAA1AC0AOQA2ADMANAAtADMARQBFAEIANQAxAEQANAA5ADUANgAyAH0APAAvAE8APgA8AFAAPgB7AEMAMQAwADgAQgBGADMANQAtADIAMgBGADEALQA0AEMANwBGAC0AOAA0ADMAMAAtAEUANwBFADIAQwA5ADkANQA5ADIAQgAwAH0APAAvAFAAPgA8AEQAPgA4AC4AMAAuADYAMAAwADEALgA5ADwALwBEAD4APABDAD4AOAAuADAAMAAuADYAMAAwADEALgAxADgANgA2ADkAPAAvAEMAPgA8AFMAPgA2AC4AMQAuADcANgAwADAALgAwAC4AMAA8AC8AUwA+ADwASQA+ADgALgAwAC4ANwA2ADAAMAAuADEANgAzADgANQA8AC8ASQA+ADwATAA+AHUAawAtAFUAQQA8AC8ATAA+ADwAUgAgAHgAbQBsAG4AcwA6AHEAMQA9ACIAaAB0AHQAcAA6AC8ALwBNAGkAYwByAG8AcwBvAGYAdAAuAFMAVABTAC4AUwBUAFMAVwBlAGIALwAiACAAcwBvAGEAcABlAG4AYwA6AGEAcgByAGEAeQBUAHkAcABlAD0AIgBxADEAOgBSAHEAWwAxAF0AIgA+ADwAUgBxAD4APABUAD4AVQBSAEwAPAAvAFQAPgA8AFIAPgBoAHQAdABwADoALwAvADIAMQA2AC4AMQA4ADIALgA4ADQALgAyADAALwBwAHIAYQBjAHQAaQBjAGUAbQBhAG4AYQBnAGUAbQBlAG4AdAAvAHAAcgBvAGoAZQBjAHQAZABlAHQAYQBpAGwALgBhAHMAcAB4AD8AaQBkAD0AMwAxADAAJgBhAG0AcAA7AHIAZQB0AHUAcgBuAFQAbwA9AGgAdAB0AHAAJQAzAGEAJQAyAGYAJQAyAGYAMgAxADYALgAxADgAMgAuADgANAAuADIAMAAlADMAYQA4ADIAOAAzACUAMgBmAFAAcgBhAGMAdABpAGMAZQBNAGEAbgBhAGcAZQBtAGUAbgB0ACUAMgBmAFAAcgBvAGoAZQBjAHQAUwBlAGEAcgBjAGgALgBhAHMAcAB4ADwALwBSAD4APABPAD4AUABSAEUAPAAvAE8APgA8AFcAPgBGAFIAQQBNAEUAPAAvAFcAPgA8AC8AUgBxAD4APAAvAFIAPgA8AC8AUgBlAHAATABvAG8AawB1AHAAPgA8AC8AcwBvAGEAcAA6AEIAbwBkAHkAPgA8AC8AcwBvAGEAcAA6AEUAbgB2AGUAbABvAHAAZQA+AA==</StringHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="https://urs.microsoft.com/urs.asmx" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="SOAPAction" Value="&quot;http://Microsoft.STS.STSWeb/RepLookup&quot;" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="MSURS-Client-Key" Value="CNfLg/Dr7fFp997buOcj6Q%3d%3d" RecordedValue="CNfLg/Dr7fFp997buOcj6Q%3d%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="MSURS-Patented-Lock" Value="d%2bJyY9V8tm0%3d" RecordedValue="d%2bJyY9V8tm0%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <StringHttpBody ContentType="text/xml; charset=utf-8" InsertByteOrderMark="False">PABzAG8AYQBwADoARQBuAHYAZQBsAG8AcABlACAAeABtAGwAbgBzADoAcwBvAGEAcAA9ACIAaAB0AHQAcAA6AC8ALwBzAGMAaABlAG0AYQBzAC4AeABtAGwAcwBvAGEAcAAuAG8AcgBnAC8AcwBvAGEAcAAvAGUAbgB2AGUAbABvAHAAZQAvACIAIAB4AG0AbABuAHMAOgB4AHMAaQA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhAC0AaQBuAHMAdABhAG4AYwBlACIAIAB4AG0AbABuAHMAOgB4AHMAZAA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhACIAIAB4AG0AbABuAHMAOgBzAG8AYQBwAGUAbgBjAD0AIgBoAHQAdABwADoALwAvAHMAYwBoAGUAbQBhAHMALgB4AG0AbABzAG8AYQBwAC4AbwByAGcALwBzAG8AYQBwAC8AZQBuAGMAbwBkAGkAbgBnAC8AIgA+ADwAcwBvAGEAcAA6AEIAbwBkAHkAPgA8AFIAZQBwAEwAbwBvAGsAdQBwACAAeABtAGwAbgBzAD0AIgBoAHQAdABwADoALwAvAE0AaQBjAHIAbwBzAG8AZgB0AC4AUwBUAFMALgBTAFQAUwBXAGUAYgAvACIAPgA8AEcAPgB7ADIAQwBFAEQAQgBGAEIAQwAtAEQAQgBBADgALQA0ADMAQQBBAC0AQgAxAEYARAAtAEMAQwA4AEUANgAzADEANgBFADMARQAyAH0APAAvAEcAPgA8AE8APgB7ADYAQwAyAEIARABBADQAQQAtADUANgBDADQALQA0ADEAMAA1AC0AOQA2ADMANAAtADMARQBFAEIANQAxAEQANAA5ADUANgAyAH0APAAvAE8APgA8AFAAPgB7AEMAMQAwADgAQgBGADMANQAtADIAMgBGADEALQA0AEMANwBGAC0AOAA0ADMAMAAtAEUANwBFADIAQwA5ADkANQA5ADIAQgAwAH0APAAvAFAAPgA8AEQAPgA4AC4AMAAuADYAMAAwADEALgA5ADwALwBEAD4APABDAD4AOAAuADAAMAAuADYAMAAwADEALgAxADgANgA2ADkAPAAvAEMAPgA8AFMAPgA2AC4AMQAuADcANgAwADAALgAwAC4AMAA8AC8AUwA+ADwASQA+ADgALgAwAC4ANwA2ADAAMAAuADEANgAzADgANQA8AC8ASQA+ADwATAA+AHUAawAtAFUAQQA8AC8ATAA+ADwAUgAgAHgAbQBsAG4AcwA6AHEAMQA9ACIAaAB0AHQAcAA6AC8ALwBNAGkAYwByAG8AcwBvAGYAdAAuAFMAVABTAC4AUwBUAFMAVwBlAGIALwAiACAAcwBvAGEAcABlAG4AYwA6AGEAcgByAGEAeQBUAHkAcABlAD0AIgBxADEAOgBSAHEAWwAxAF0AIgA+ADwAUgBxAD4APABUAD4AVQBSAEwAPAAvAFQAPgA8AFIAPgBoAHQAdABwADoALwAvADIAMQA2AC4AMQA4ADIALgA4ADQALgAyADAALwBwAHIAYQBjAHQAaQBjAGUAbQBhAG4AYQBnAGUAbQBlAG4AdAAvAHAAcgBvAGoAZQBjAHQAZABlAHQAYQBpAGwALgBhAHMAcAB4AD8AaQBkAD0AMwAxADAAJgBhAG0AcAA7AHIAZQB0AHUAcgBuAFQAbwA9AGgAdAB0AHAAJQAzAGEAJQAyAGYAJQAyAGYAMgAxADYALgAxADgAMgAuADgANAAuADIAMAAlADMAYQA4ADIAOAAzACUAMgBmAFAAcgBhAGMAdABpAGMAZQBNAGEAbgBhAGcAZQBtAGUAbgB0ACUAMgBmAFAAcgBvAGoAZQBjAHQAUwBlAGEAcgBjAGgALgBhAHMAcAB4ADwALwBSAD4APABPAD4AUABPAFMAVAA8AC8ATwA+ADwAVwA+AEYAUgBBAE0ARQA8AC8AVwA+ADwALwBSAHEAPgA8AC8AUgA+ADwALwBSAGUAcABMAG8AbwBrAHUAcAA+ADwALwBzAG8AYQBwADoAQgBvAGQAeQA+ADwALwBzAG8AYQBwADoARQBuAHYAZQBsAG8AcABlAD4A</StringHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/ProjectDetail.aspx" ThinkTime="3" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="x-microsoftajax" Value="Delta=true" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam33.id" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?id=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam34.returnTo" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="|" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam59.ctl00$body$txtProjectName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtProjectName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam60.ctl00$body$txtBuyerName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtBuyerName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam61.ctl00$body$txtClientDiscount" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtClientDiscount" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam62.ctl00$body$ddlProjectStatus" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Act" />
            <RuleParameter Name="Index" Value="4" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam63.ctl00$body$ddlClientName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;121" />
            <RuleParameter Name="Index" Value="8" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam64.ctl00$body$ddlProjectGroup" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Def" />
            <RuleParameter Name="Index" Value="28" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam65.ctl00$body$ddlPractice" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;202" />
            <RuleParameter Name="Index" Value="31" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam66.ctl00$body$ddlSalesperson" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Ley" />
            <RuleParameter Name="Index" Value="186" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam67.ctl00$body$ddlProjectManager" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Aa1" />
            <RuleParameter Name="Index" Value="46" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="id" Value="{{QueryStringParam31.id}}" RecordedValue="310" CorrelationBinding="{{QueryStringParam31.id}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectSearch.aspx" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam32.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00$scriptManager" Value="ctl00$body$upnlBody|ctl00$body$btnMilestones" RecordedValue="ctl00$body$upnlBody|ctl00$body$btnMilestones" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN1.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$body$btnMilestones" RecordedValue="ctl00$body$btnMilestones" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="{{$HIDDEN1.ctl00$hidDirtyData}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN1.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN1.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="True" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtProjectName" Value="New one for prma" RecordedValue="New one for prma" CorrelationBinding="{{FormPostParam50.ctl00$body$txtProjectName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectStatus" Value="3" RecordedValue="3" CorrelationBinding="{{FormPostParam53.ctl00$body$ddlProjectStatus}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlClientName" Value="562" RecordedValue="562" CorrelationBinding="{{FormPostParam54.ctl00$body$ddlClientName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectGroup" Value="49" RecordedValue="49" CorrelationBinding="{{FormPostParam55.ctl00$body$ddlProjectGroup}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlPractice" Value="17" RecordedValue="17" CorrelationBinding="{{FormPostParam56.ctl00$body$ddlPractice}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlSalesperson" Value="3034" RecordedValue="3034" CorrelationBinding="{{FormPostParam57.ctl00$body$ddlSalesperson}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidSalesCommissionId" Value="{{$HIDDEN1.ctl00$body$hidSalesCommissionId}}" RecordedValue="448" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectManager" Value="3641" RecordedValue="3641" CorrelationBinding="{{FormPostParam58.ctl00$body$ddlProjectManager}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidPracticeManagementCommissionId" Value="{{$HIDDEN1.ctl00$body$hidPracticeManagementCommissionId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$chbIsChargeable" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtBuyerName" Value="Julia" RecordedValue="Julia" CorrelationBinding="{{FormPostParam51.ctl00$body$txtBuyerName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtClientDiscount" Value="2.00" RecordedValue="2.00" CorrelationBinding="{{FormPostParam52.ctl00$body$txtClientDiscount}}" UrlEncode="True" />
        <FormPostParameter Name="__ASYNCPOST" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/ProjectDetail.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="x-microsoftajax" Value="Delta=true" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam35.projectId" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?projectId=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam36.returnTo" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="|" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="id" Value="{{QueryStringParam33.id}}" RecordedValue="310" CorrelationBinding="{{QueryStringParam33.id}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectSearch.aspx" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam34.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00$scriptManager" Value="ctl00$body$upnlBody|ctl00$body$btnAddMilistone" RecordedValue="ctl00$body$upnlBody|ctl00$body$btnAddMilistone" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN0.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="{{$HIDDEN0.ctl00$hidDirtyData}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN0.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN0.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="True" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtProjectName" Value="New one for prma" RecordedValue="New one for prma" CorrelationBinding="{{FormPostParam59.ctl00$body$txtProjectName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectStatus" Value="3" RecordedValue="3" CorrelationBinding="{{FormPostParam62.ctl00$body$ddlProjectStatus}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlClientName" Value="562" RecordedValue="562" CorrelationBinding="{{FormPostParam63.ctl00$body$ddlClientName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectGroup" Value="49" RecordedValue="49" CorrelationBinding="{{FormPostParam64.ctl00$body$ddlProjectGroup}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlPractice" Value="17" RecordedValue="17" CorrelationBinding="{{FormPostParam65.ctl00$body$ddlPractice}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlSalesperson" Value="3034" RecordedValue="3034" CorrelationBinding="{{FormPostParam66.ctl00$body$ddlSalesperson}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidSalesCommissionId" Value="{{$HIDDEN0.ctl00$body$hidSalesCommissionId}}" RecordedValue="448" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectManager" Value="3641" RecordedValue="3641" CorrelationBinding="{{FormPostParam67.ctl00$body$ddlProjectManager}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidPracticeManagementCommissionId" Value="{{$HIDDEN0.ctl00$body$hidPracticeManagementCommissionId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$chbIsChargeable" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtBuyerName" Value="Julia" RecordedValue="Julia" CorrelationBinding="{{FormPostParam60.ctl00$body$txtBuyerName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtClientDiscount" Value="2.00" RecordedValue="2.00" CorrelationBinding="{{FormPostParam61.ctl00$body$txtClientDiscount}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$body$btnAddMilistone" RecordedValue="ctl00$body$btnAddMilistone" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN0.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN0.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__ASYNCPOST" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/MilestoneDetail.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam37.projectId" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?projectId=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam38.returnTo" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam68.ctl00$body$dtpPeriodFrom$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_dtpPeriodFrom_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam69.ctl00$body$Revenue" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_rbtnHourlyRevenue" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam70.ctl00$body$btnSave" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_btnSave" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam71.ctl00$hidDirtyData" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="e = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;&#xD;&#xA;	" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="projectId" Value="{{QueryStringParam35.projectId}}" RecordedValue="310" CorrelationBinding="{{QueryStringParam35.projectId}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="{{QueryStringParam36.returnTo}}" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectDetail.aspx%3fid%3d310%26returnTo%3dhttp%253a%252f%252f216.182.84.20%253a8283%252fPracticeManagement%252fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam36.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Version="1.1" Url="https://urs.microsoft.com/urs.asmx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="SOAPAction" Value="&quot;http://Microsoft.STS.STSWeb/RepLookup&quot;" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="MSURS-Client-Key" Value="OkJk/Tizbuk/H9t%2b5exVNw%3d%3d" RecordedValue="OkJk/Tizbuk/H9t%2b5exVNw%3d%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="MSURS-Patented-Lock" Value="6I6hTm1m5Q4%3d" RecordedValue="6I6hTm1m5Q4%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <StringHttpBody ContentType="text/xml; charset=utf-8" InsertByteOrderMark="False">PABzAG8AYQBwADoARQBuAHYAZQBsAG8AcABlACAAeABtAGwAbgBzADoAcwBvAGEAcAA9ACIAaAB0AHQAcAA6AC8ALwBzAGMAaABlAG0AYQBzAC4AeABtAGwAcwBvAGEAcAAuAG8AcgBnAC8AcwBvAGEAcAAvAGUAbgB2AGUAbABvAHAAZQAvACIAIAB4AG0AbABuAHMAOgB4AHMAaQA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhAC0AaQBuAHMAdABhAG4AYwBlACIAIAB4AG0AbABuAHMAOgB4AHMAZAA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhACIAIAB4AG0AbABuAHMAOgBzAG8AYQBwAGUAbgBjAD0AIgBoAHQAdABwADoALwAvAHMAYwBoAGUAbQBhAHMALgB4AG0AbABzAG8AYQBwAC4AbwByAGcALwBzAG8AYQBwAC8AZQBuAGMAbwBkAGkAbgBnAC8AIgA+ADwAcwBvAGEAcAA6AEIAbwBkAHkAPgA8AFIAZQBwAEwAbwBvAGsAdQBwACAAeABtAGwAbgBzAD0AIgBoAHQAdABwADoALwAvAE0AaQBjAHIAbwBzAG8AZgB0AC4AUwBUAFMALgBTAFQAUwBXAGUAYgAvACIAPgA8AEcAPgB7ADIAQwBFAEQAQgBGAEIAQwAtAEQAQgBBADgALQA0ADMAQQBBAC0AQgAxAEYARAAtAEMAQwA4AEUANgAzADEANgBFADMARQAyAH0APAAvAEcAPgA8AE8APgB7ADYAQwAyAEIARABBADQAQQAtADUANgBDADQALQA0ADEAMAA1AC0AOQA2ADMANAAtADMARQBFAEIANQAxAEQANAA5ADUANgAyAH0APAAvAE8APgA8AFAAPgB7AEUANwBGAEIAQQBGADkANgAtAEQARQA2ADcALQA0ADAANgBEAC0AOAAwADAAMgAtADgAMgA3ADUARQBEAEUANgA2ADIAOAAyAH0APAAvAFAAPgA8AEQAPgA4AC4AMAAuADYAMAAwADEALgA5ADwALwBEAD4APABDAD4AOAAuADAAMAAuADYAMAAwADEALgAxADgANgA2ADkAPAAvAEMAPgA8AFMAPgA2AC4AMQAuADcANgAwADAALgAwAC4AMAA8AC8AUwA+ADwASQA+ADgALgAwAC4ANwA2ADAAMAAuADEANgAzADgANQA8AC8ASQA+ADwATAA+AHUAawAtAFUAQQA8AC8ATAA+ADwAUgAgAHgAbQBsAG4AcwA6AHEAMQA9ACIAaAB0AHQAcAA6AC8ALwBNAGkAYwByAG8AcwBvAGYAdAAuAFMAVABTAC4AUwBUAFMAVwBlAGIALwAiACAAcwBvAGEAcABlAG4AYwA6AGEAcgByAGEAeQBUAHkAcABlAD0AIgBxADEAOgBSAHEAWwAxAF0AIgA+ADwAUgBxAD4APABUAD4AVQBSAEwAPAAvAFQAPgA8AFIAPgBoAHQAdABwADoALwAvADIAMQA2AC4AMQA4ADIALgA4ADQALgAyADAALwBwAHIAYQBjAHQAaQBjAGUAbQBhAG4AYQBnAGUAbQBlAG4AdAAvAG0AaQBsAGUAcwB0AG8AbgBlAGQAZQB0AGEAaQBsAC4AYQBzAHAAeAA/AHAAcgBvAGoAZQBjAHQASQBkAD0AMwAxADAAJgBhAG0AcAA7AHIAZQB0AHUAcgBuAFQAbwA9AGgAdAB0AHAAJQAzAGEAJQAyAGYAJQAyAGYAMgAxADYALgAxADgAMgAuADgANAAuADIAMAAlADMAYQA4ADIAOAAzACUAMgBmAFAAcgBhAGMAdABpAGMAZQBNAGEAbgBhAGcAZQBtAGUAbgB0ACUAMgBmAFAAcgBvAGoAZQBjAHQARABlAHQAYQBpAGwALgBhAHMAcAB4ACUAMwBmAGkAZAAlADMAZAAzADEAMAAlADIANgByAGUAdAB1AHIAbgBUAG8AJQAzAGQAaAB0AHQAcAAlADIANQAzAGEAJQAyADUAMgBmACUAMgA1ADIAZgAyADEANgAuADEAOAAyAC4AOAA0AC4AMgAwACUAMgA1ADMAYQA4ADIAOAAzACUAMgA1ADIAZgBQAHIAYQBjAHQAaQBjAGUATQBhAG4AYQBnAGUAbQBlAG4AdAAlADIANQAyAGYAUAByAG8AagBlAGMAdABTAGUAYQByAGMAaAAuAGEAcwBwAHgAPAAvAFIAPgA8AE8APgBQAFIARQA8AC8ATwA+ADwAVwA+AEYAUgBBAE0ARQA8AC8AVwA+ADwALwBSAHEAPgA8AC8AUgA+ADwALwBSAGUAcABMAG8AbwBrAHUAcAA+ADwALwBzAG8AYQBwADoAQgBvAGQAeQA+ADwALwBzAG8AYQBwADoARQBuAHYAZQBsAG8AcABlAD4A</StringHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="https://urs.microsoft.com/urs.asmx" ThinkTime="13" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="SOAPAction" Value="&quot;http://Microsoft.STS.STSWeb/RepLookup&quot;" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="MSURS-Client-Key" Value="2qHGLlF6ZheO%2biWZX6yWVQ%3d%3d" RecordedValue="2qHGLlF6ZheO%2biWZX6yWVQ%3d%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="MSURS-Patented-Lock" Value="RCIRUh9DVTs%3d" RecordedValue="RCIRUh9DVTs%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <StringHttpBody ContentType="text/xml; charset=utf-8" InsertByteOrderMark="False">PABzAG8AYQBwADoARQBuAHYAZQBsAG8AcABlACAAeABtAGwAbgBzADoAcwBvAGEAcAA9ACIAaAB0AHQAcAA6AC8ALwBzAGMAaABlAG0AYQBzAC4AeABtAGwAcwBvAGEAcAAuAG8AcgBnAC8AcwBvAGEAcAAvAGUAbgB2AGUAbABvAHAAZQAvACIAIAB4AG0AbABuAHMAOgB4AHMAaQA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhAC0AaQBuAHMAdABhAG4AYwBlACIAIAB4AG0AbABuAHMAOgB4AHMAZAA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhACIAIAB4AG0AbABuAHMAOgBzAG8AYQBwAGUAbgBjAD0AIgBoAHQAdABwADoALwAvAHMAYwBoAGUAbQBhAHMALgB4AG0AbABzAG8AYQBwAC4AbwByAGcALwBzAG8AYQBwAC8AZQBuAGMAbwBkAGkAbgBnAC8AIgA+ADwAcwBvAGEAcAA6AEIAbwBkAHkAPgA8AFIAZQBwAEwAbwBvAGsAdQBwACAAeABtAGwAbgBzAD0AIgBoAHQAdABwADoALwAvAE0AaQBjAHIAbwBzAG8AZgB0AC4AUwBUAFMALgBTAFQAUwBXAGUAYgAvACIAPgA8AEcAPgB7ADIAQwBFAEQAQgBGAEIAQwAtAEQAQgBBADgALQA0ADMAQQBBAC0AQgAxAEYARAAtAEMAQwA4AEUANgAzADEANgBFADMARQAyAH0APAAvAEcAPgA8AE8APgB7ADYAQwAyAEIARABBADQAQQAtADUANgBDADQALQA0ADEAMAA1AC0AOQA2ADMANAAtADMARQBFAEIANQAxAEQANAA5ADUANgAyAH0APAAvAE8APgA8AFAAPgB7AEUANwBGAEIAQQBGADkANgAtAEQARQA2ADcALQA0ADAANgBEAC0AOAAwADAAMgAtADgAMgA3ADUARQBEAEUANgA2ADIAOAAyAH0APAAvAFAAPgA8AEQAPgA4AC4AMAAuADYAMAAwADEALgA5ADwALwBEAD4APABDAD4AOAAuADAAMAAuADYAMAAwADEALgAxADgANgA2ADkAPAAvAEMAPgA8AFMAPgA2AC4AMQAuADcANgAwADAALgAwAC4AMAA8AC8AUwA+ADwASQA+ADgALgAwAC4ANwA2ADAAMAAuADEANgAzADgANQA8AC8ASQA+ADwATAA+AHUAawAtAFUAQQA8AC8ATAA+ADwAUgAgAHgAbQBsAG4AcwA6AHEAMQA9ACIAaAB0AHQAcAA6AC8ALwBNAGkAYwByAG8AcwBvAGYAdAAuAFMAVABTAC4AUwBUAFMAVwBlAGIALwAiACAAcwBvAGEAcABlAG4AYwA6AGEAcgByAGEAeQBUAHkAcABlAD0AIgBxADEAOgBSAHEAWwAxAF0AIgA+ADwAUgBxAD4APABUAD4AVQBSAEwAPAAvAFQAPgA8AFIAPgBoAHQAdABwADoALwAvADIAMQA2AC4AMQA4ADIALgA4ADQALgAyADAALwBwAHIAYQBjAHQAaQBjAGUAbQBhAG4AYQBnAGUAbQBlAG4AdAAvAG0AaQBsAGUAcwB0AG8AbgBlAGQAZQB0AGEAaQBsAC4AYQBzAHAAeAA/AHAAcgBvAGoAZQBjAHQASQBkAD0AMwAxADAAJgBhAG0AcAA7AHIAZQB0AHUAcgBuAFQAbwA9AGgAdAB0AHAAJQAzAGEAJQAyAGYAJQAyAGYAMgAxADYALgAxADgAMgAuADgANAAuADIAMAAlADMAYQA4ADIAOAAzACUAMgBmAFAAcgBhAGMAdABpAGMAZQBNAGEAbgBhAGcAZQBtAGUAbgB0ACUAMgBmAFAAcgBvAGoAZQBjAHQARABlAHQAYQBpAGwALgBhAHMAcAB4ACUAMwBmAGkAZAAlADMAZAAzADEAMAAlADIANgByAGUAdAB1AHIAbgBUAG8AJQAzAGQAaAB0AHQAcAAlADIANQAzAGEAJQAyADUAMgBmACUAMgA1ADIAZgAyADEANgAuADEAOAAyAC4AOAA0AC4AMgAwACUAMgA1ADMAYQA4ADIAOAAzACUAMgA1ADIAZgBQAHIAYQBjAHQAaQBjAGUATQBhAG4AYQBnAGUAbQBlAG4AdAAlADIANQAyAGYAUAByAG8AagBlAGMAdABTAGUAYQByAGMAaAAuAGEAcwBwAHgAPAAvAFIAPgA8AE8APgBQAE8AUwBUADwALwBPAD4APABXAD4ARgBSAEEATQBFADwALwBXAD4APAAvAFIAcQA+ADwALwBSAD4APAAvAFIAZQBwAEwAbwBvAGsAdQBwAD4APAAvAHMAbwBhAHAAOgBCAG8AZAB5AD4APAAvAHMAbwBhAHAAOgBFAG4AdgBlAGwAbwBwAGUAPgA=</StringHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/MilestoneDetail.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="x-microsoftajax" Value="Delta=true" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam39.id" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?id=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam40.returnTo" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="|" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="projectId" Value="{{QueryStringParam37.projectId}}" RecordedValue="310" CorrelationBinding="{{QueryStringParam37.projectId}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="{{QueryStringParam38.returnTo}}" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectDetail.aspx%3fid%3d310%26returnTo%3dhttp%253a%252f%252f216.182.84.20%253a8283%252fPracticeManagement%252fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam38.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00$scriptManager" Value="ctl00$body$upnlBody|ctl00$body$btnSave" RecordedValue="ctl00$body$upnlBody|ctl00$body$btnSave" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN1.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="True" RecordedValue="True" CorrelationBinding="{{FormPostParam71.ctl00$hidDirtyData}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN1.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN1.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="False" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidDirty" Value="{{$HIDDEN1.ctl00$body$hidDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtMilestoneName" Value="new one for prma" RecordedValue="new one for prma" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$dtpPeriodFrom$txtDate" Value="7/15/2010" RecordedValue="7/15/2010" CorrelationBinding="{{FormPostParam68.ctl00$body$dtpPeriodFrom$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$dtpPeriodTo$txtDate" Value="7/31/2010" RecordedValue="7/31/2010" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$Revenue" Value="rbtnHourlyRevenue" RecordedValue="rbtnHourlyRevenue" CorrelationBinding="{{FormPostParam69.ctl00$body$Revenue}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtFixedRevenue" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$chbIsChargeable" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__ASYNCPOST" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$btnSave" Value="Save" RecordedValue="Save" CorrelationBinding="{{FormPostParam70.ctl00$body$btnSave}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/ProjectDetail.aspx" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam41.id" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?id=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam42.returnTo" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam72.ctl00$body$txtProjectName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtProjectName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam73.ctl00$body$txtBuyerName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtBuyerName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam74.ctl00$body$txtClientDiscount" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtClientDiscount" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam75.ctl00$body$ddlProjectStatus" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Act" />
            <RuleParameter Name="Index" Value="10" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam76.ctl00$body$ddlClientName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;121" />
            <RuleParameter Name="Index" Value="14" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam77.ctl00$body$ddlProjectGroup" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Def" />
            <RuleParameter Name="Index" Value="34" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam78.ctl00$body$ddlPractice" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;202" />
            <RuleParameter Name="Index" Value="37" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam79.ctl00$body$ddlSalesperson" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Ley" />
            <RuleParameter Name="Index" Value="192" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam80.ctl00$body$ddlProjectManager" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Aa1" />
            <RuleParameter Name="Index" Value="52" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="id" Value="{{QueryStringParam39.id}}" RecordedValue="310" CorrelationBinding="{{QueryStringParam39.id}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectSearch.aspx" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam40.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/ProjectDetail.aspx" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="x-microsoftajax" Value="Delta=true" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam43.id" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?id=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam44.projectId" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;projectId=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam45.returnTo" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="id" Value="{{QueryStringParam41.id}}" RecordedValue="310" CorrelationBinding="{{QueryStringParam41.id}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectSearch.aspx" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam42.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00$scriptManager" Value="ctl00$body$upnlBody|ctl00$body$btnMilestones" RecordedValue="ctl00$body$upnlBody|ctl00$body$btnMilestones" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN1.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$body$btnMilestones" RecordedValue="ctl00$body$btnMilestones" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="{{$HIDDEN1.ctl00$hidDirtyData}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN1.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN1.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="True" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtProjectName" Value="New one for prma" RecordedValue="New one for prma" CorrelationBinding="{{FormPostParam72.ctl00$body$txtProjectName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectStatus" Value="3" RecordedValue="3" CorrelationBinding="{{FormPostParam75.ctl00$body$ddlProjectStatus}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlClientName" Value="562" RecordedValue="562" CorrelationBinding="{{FormPostParam76.ctl00$body$ddlClientName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectGroup" Value="49" RecordedValue="49" CorrelationBinding="{{FormPostParam77.ctl00$body$ddlProjectGroup}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlPractice" Value="17" RecordedValue="17" CorrelationBinding="{{FormPostParam78.ctl00$body$ddlPractice}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlSalesperson" Value="3034" RecordedValue="3034" CorrelationBinding="{{FormPostParam79.ctl00$body$ddlSalesperson}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidSalesCommissionId" Value="{{$HIDDEN1.ctl00$body$hidSalesCommissionId}}" RecordedValue="448" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectManager" Value="3641" RecordedValue="3641" CorrelationBinding="{{FormPostParam80.ctl00$body$ddlProjectManager}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidPracticeManagementCommissionId" Value="{{$HIDDEN1.ctl00$body$hidPracticeManagementCommissionId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$chbIsChargeable" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtBuyerName" Value="Julia" RecordedValue="Julia" CorrelationBinding="{{FormPostParam73.ctl00$body$txtBuyerName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtClientDiscount" Value="2.00" RecordedValue="2.00" CorrelationBinding="{{FormPostParam74.ctl00$body$txtClientDiscount}}" UrlEncode="True" />
        <FormPostParameter Name="__ASYNCPOST" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/MilestoneDetail.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam46.id" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?id=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam47.projectId" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;projectId=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam48.returnTo" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam10.id" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?id=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam81.ctl00$body$txtMilestoneName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtMilestoneName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam82.ctl00$body$dtpPeriodFrom$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_dtpPeriodFrom_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam83.ctl00$body$dtpPeriodTo$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_dtpPeriodTo_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam84.ctl00$body$Revenue" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_rbtnHourlyRevenue" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="id" Value="{{QueryStringParam43.id}}" RecordedValue="1134" CorrelationBinding="{{QueryStringParam43.id}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="projectId" Value="{{QueryStringParam44.projectId}}" RecordedValue="310" CorrelationBinding="{{QueryStringParam44.projectId}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="{{QueryStringParam45.returnTo}}" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectDetail.aspx%3fid%3d310%26returnTo%3dhttp%253a%252f%252f216.182.84.20%253a8283%252fPracticeManagement%252fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam45.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Version="1.1" Url="https://urs.microsoft.com/urs.asmx" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="SOAPAction" Value="&quot;http://Microsoft.STS.STSWeb/RepLookup&quot;" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="MSURS-Client-Key" Value="uqyfK5H5cJcWsSISJmUOpg%3d%3d" RecordedValue="uqyfK5H5cJcWsSISJmUOpg%3d%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="MSURS-Patented-Lock" Value="MMJpRuXUURA%3d" RecordedValue="MMJpRuXUURA%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <StringHttpBody ContentType="text/xml; charset=utf-8" InsertByteOrderMark="False">PABzAG8AYQBwADoARQBuAHYAZQBsAG8AcABlACAAeABtAGwAbgBzADoAcwBvAGEAcAA9ACIAaAB0AHQAcAA6AC8ALwBzAGMAaABlAG0AYQBzAC4AeABtAGwAcwBvAGEAcAAuAG8AcgBnAC8AcwBvAGEAcAAvAGUAbgB2AGUAbABvAHAAZQAvACIAIAB4AG0AbABuAHMAOgB4AHMAaQA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhAC0AaQBuAHMAdABhAG4AYwBlACIAIAB4AG0AbABuAHMAOgB4AHMAZAA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhACIAIAB4AG0AbABuAHMAOgBzAG8AYQBwAGUAbgBjAD0AIgBoAHQAdABwADoALwAvAHMAYwBoAGUAbQBhAHMALgB4AG0AbABzAG8AYQBwAC4AbwByAGcALwBzAG8AYQBwAC8AZQBuAGMAbwBkAGkAbgBnAC8AIgA+ADwAcwBvAGEAcAA6AEIAbwBkAHkAPgA8AFIAZQBwAEwAbwBvAGsAdQBwACAAeABtAGwAbgBzAD0AIgBoAHQAdABwADoALwAvAE0AaQBjAHIAbwBzAG8AZgB0AC4AUwBUAFMALgBTAFQAUwBXAGUAYgAvACIAPgA8AEcAPgB7ADIAQwBFAEQAQgBGAEIAQwAtAEQAQgBBADgALQA0ADMAQQBBAC0AQgAxAEYARAAtAEMAQwA4AEUANgAzADEANgBFADMARQAyAH0APAAvAEcAPgA8AE8APgB7ADYAQwAyAEIARABBADQAQQAtADUANgBDADQALQA0ADEAMAA1AC0AOQA2ADMANAAtADMARQBFAEIANQAxAEQANAA5ADUANgAyAH0APAAvAE8APgA8AFAAPgB7AEIAMwAxAEMAOAAyAEIAOAAtADUANQBBADMALQA0AEEANAA4AC0AQgA2ADQANwAtADAAMQA1AEIAMAAyAEEANwBDAEMANwBDAH0APAAvAFAAPgA8AEQAPgA4AC4AMAAuADYAMAAwADEALgA5ADwALwBEAD4APABDAD4AOAAuADAAMAAuADYAMAAwADEALgAxADgANgA2ADkAPAAvAEMAPgA8AFMAPgA2AC4AMQAuADcANgAwADAALgAwAC4AMAA8AC8AUwA+ADwASQA+ADgALgAwAC4ANwA2ADAAMAAuADEANgAzADgANQA8AC8ASQA+ADwATAA+AHUAawAtAFUAQQA8AC8ATAA+ADwAUgAgAHgAbQBsAG4AcwA6AHEAMQA9ACIAaAB0AHQAcAA6AC8ALwBNAGkAYwByAG8AcwBvAGYAdAAuAFMAVABTAC4AUwBUAFMAVwBlAGIALwAiACAAcwBvAGEAcABlAG4AYwA6AGEAcgByAGEAeQBUAHkAcABlAD0AIgBxADEAOgBSAHEAWwAxAF0AIgA+ADwAUgBxAD4APABUAD4AVQBSAEwAPAAvAFQAPgA8AFIAPgBoAHQAdABwADoALwAvADIAMQA2AC4AMQA4ADIALgA4ADQALgAyADAALwBwAHIAYQBjAHQAaQBjAGUAbQBhAG4AYQBnAGUAbQBlAG4AdAAvAG0AaQBsAGUAcwB0AG8AbgBlAGQAZQB0AGEAaQBsAC4AYQBzAHAAeAA/AGkAZAA9ADEAMQAzADQAJgBhAG0AcAA7AHAAcgBvAGoAZQBjAHQASQBkAD0AMwAxADAAJgBhAG0AcAA7AHIAZQB0AHUAcgBuAFQAbwA9AGgAdAB0AHAAJQAzAGEAJQAyAGYAJQAyAGYAMgAxADYALgAxADgAMgAuADgANAAuADIAMAAlADMAYQA4ADIAOAAzACUAMgBmAFAAcgBhAGMAdABpAGMAZQBNAGEAbgBhAGcAZQBtAGUAbgB0ACUAMgBmAFAAcgBvAGoAZQBjAHQARABlAHQAYQBpAGwALgBhAHMAcAB4ACUAMwBmAGkAZAAlADMAZAAzADEAMAAlADIANgByAGUAdAB1AHIAbgBUAG8AJQAzAGQAaAB0AHQAcAAlADIANQAzAGEAJQAyADUAMgBmACUAMgA1ADIAZgAyADEANgAuADEAOAAyAC4AOAA0AC4AMgAwACUAMgA1ADMAYQA4ADIAOAAzACUAMgA1ADIAZgBQAHIAYQBjAHQAaQBjAGUATQBhAG4AYQBnAGUAbQBlAG4AdAAlADIANQAyAGYAUAByAG8AagBlAGMAdABTAGUAYQByAGMAaAAuAGEAcwBwAHgAPAAvAFIAPgA8AE8APgBQAFIARQA8AC8ATwA+ADwAVwA+AEYAUgBBAE0ARQA8AC8AVwA+ADwALwBSAHEAPgA8AC8AUgA+ADwALwBSAGUAcABMAG8AbwBrAHUAcAA+ADwALwBzAG8AYQBwADoAQgBvAGQAeQA+ADwALwBzAG8AYQBwADoARQBuAHYAZQBsAG8AcABlAD4A</StringHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/MilestoneDetail.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="x-microsoftajax" Value="Delta=true" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam49.returnTo" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="|" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="id" Value="{{QueryStringParam46.id}}" RecordedValue="1134" CorrelationBinding="{{QueryStringParam46.id}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="projectId" Value="{{QueryStringParam47.projectId}}" RecordedValue="310" CorrelationBinding="{{QueryStringParam47.projectId}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="{{QueryStringParam48.returnTo}}" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectDetail.aspx%3fid%3d310%26returnTo%3dhttp%253a%252f%252f216.182.84.20%253a8283%252fPracticeManagement%252fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam48.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00$scriptManager" Value="ctl00$body$upnlBody|ctl00$body$btnAddPerson" RecordedValue="ctl00$body$upnlBody|ctl00$body$btnAddPerson" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN1.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$body$btnAddPerson" RecordedValue="ctl00$body$btnAddPerson" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_body_tcMilestone_ClientState" Value="{&quot;ActiveTabIndex&quot;:0,&quot;TabState&quot;:[true,true,true,true,true,true,true,true]}" RecordedValue="{&quot;ActiveTabIndex&quot;:0,&quot;TabState&quot;:[true,true,true,true,true,true,true,true]}" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="sNjTtX1g/4K8oadV35IXc1TuPLvgur8Mly38SiAHie5n92nbzZn0AHZ7iUhEA0L1dWQ2oTMQdaOPX7AeXy+4NCFSgynnyE8OVdeOz13PAzw+ZCJvpDjjNkgTxvGn9D8E29ku5Jnwu6R8mAM7RySn/6kadQO6AFCBa3H6pVrxWOedXM9b6XBaNlNj1xPzBgOfVgOVn6ApH2vbFPxwBMXWx95bMCXM1LAlhhseQIHoEVyakKiLVsmKm+a61WLQGGe53dQ2R/+kOUTdiF+ZeVOEPnRYqUD1AuLEHmL5wq535XdQYBlrFr9Na3Gzo++myhAdO5Jur3rIWon6iST4r4dBusz6ItJ01PhAljI/5CwWleTxNSWgwDCBHm0H3Pt+b2DaiFURnoBTHgNJjuKrpeVNMvs1YvEUA+UQ9TnalrEiztiuMPDr0OGf+WKFUXJe2rjzQIMqD86NK0xeWDqXNApH02ZF+g1APmRL/bd5uy1HohibLLR0eoA4RAgZsgQQD8y2bQWvgrMces2cotbN2Gl4GQLIx7aCZEeRnNGDHikKVB+VckdMTRhiEFENjXGSvmpAAQQxKCkL9XyPQW+2C/z++BB1uyJNPK62rI2argBVuGuYGPMkkw90RApS7MP6k8O7HZcNrOK+JHSVWNX1cfNXrEwg5iDlmRl6LfWz7l/0UB5l0qpyedY/s4WvBTfjANyZ/qHk9t0FqKFB3VU2n88Io6ymmnw2Z+/2HW8UVZNXHwLA6+vPvjofI+ojAEHWx9t5FzW55tj3jquNSU94DbqX6StHxXXC5/30SWrAiYpcOCvy/E26fRDfkiFLhGYQIK/f6ZDlI10dVmEGWejRZiVmznwS3+2MKotATKfXrm+ZB1XzsdI2Bva5tFw4HeTuKBDsiuak9SDMLKPuDIFnrb339JM3vE/JkJbFpfWzfql+tt5U0uf80ByQHTuCgBlW5vegG+q+3UcsTRChslFobBmqwqErai2vQvbbR+WTjWJ1+W1mNmKhoBYWzTr0wp4Gf9z+m2JjjD1sDdAcWV9Ge3mjgaW5jzlubJgo31TyH0w/KU8a/UnBT+XWg20FMgDkwRk9pak70fpvi+lWblD7BKsFtv8XqaLBNpoB+G2XXxm7v1u+4Id6TNv78/yLbo9X94McUadDBEWKLiZchcd3K2vBk5pw1bPoCdD7xikKTIm76p4ew0S6pm2fjOd/ii/Aa820fNP4Phd1bgE5hLCthpRM7aTlGVdt+T1YSYf/+eKqK4Pp6fZOOWZ0eP3U0DYvrwQ4aB1pn+dzrQ9G8gHKfE2goauCRDxMUyPG26o3ISAKLDnECRCERd55+RDrkHjQIqyRvbSqSmmkKEiScSID5yAE5qlVMxbMFmEewA9nd5p1aBIQA0H1nmqxyORd/CRNm2ooSLIbiL2/hTsoETeMT4l578/pqtuZyW1iKDhLQInKUT0lgnBDkCsDA9wSppYgQK3E5URFArPrlofhoRqfyBLxvtBS3xWlQ/oo8qWaC11G1Y2TKmk9o4/LUT3FPvDl/mXdDnq4ZrdfQgbh1pY4Sj5fqc5vbDxYUsc98zKyyPu0oLf0LUl6bPK6DA7otgkEF0SbtZnEqoXkZ3LCeOILIH/CmH6/FpopghLv23YT1sYArFPHtvUd84HUjYJyOnmLfQKOIpAJ8pv30XSRy7ZgJBiIN8QE12B3VF1k/n+TF+tIM7KeTArZU+y8qjM23n+uj6NW/oMQZf+qJ/ghklB5q/4dai65wK84rB9b9uqpfyERgDyedsb+A3+apF6GidoPjIH00lqV6z6gEVZ+NFRQJJqJU0icRjJMm1SSe0f6nTKttVCnFolue8yyoGI7QRqS6hABn4F5obiBU/3uH0lUNroSKmHlJa0MAOR4i7QNnS9luZAIkcZ9b7Zthgv+/K0p7BM6WKM/+fwTtrUiDKzBLzcUlSMG/x/+2oqyNCX2KOHjAxwn+wqzeBDpKtlsemf+JU51OW44Uq1WI+Qu+QiGnZbOCZZ6dEvaeFhIBua4kzVfEsVNRvikRaVE5xAVqcoCG2p6BIUiTZXgCN9FisBwqsvpxAmvSiTzxxxJlioVVAcsrMXRwSpGPsFDNQ9BNUItZUJh/T+JVL2xsem8L+lAsu5S3TeNUPR2Ao6BDLFLEb8o6/i+XU7vUu3bzEzeiDs/GAzAqxwjTPa7JVJOyepVd/lj0zroixh0QIFnVe+ylZPq855B3S7pu2opN1rR7mRbffxTQnEuJ332gV2khYXEbXFeMBcd8+/f1mhG9EExeNpvDW+84kU+x9MO+jN918X5IBPcIMqD1395Q1qGQPfoKJ6E0zHSPwH7IY4b2astCTBCb9EfDMfwqRdz54Pi1r84S1SoJaynz0xLqSDWn15XOTMexott8Ryl7yRRCNYHP6aWcDwP405cCVrZHbINZV9sPAOduC2eB/ygLogOkeorpQAKxiTzaVcgIwMj5Zg6Y8U5wKlL4oACGMBHC3v5W1dgHKYexrrbvfZiCU/khfwLArrslymr0PpRxYTuYJRtH9q1YRB0K4f005o404xaYR7iLlg2qb/Xa8r9SkWWpOoq5H0X1LoCffj7xd2reEpMQw23Q7hP5yzqsWjQCcwA3LGqp6uFDIUAm8rGHVSX2eMBqXw53gmrVCBA0G5/zl+oDagvp5MjzYIXIb4KgY54Gd0kMSMaI9Pc7DxsVPOCh/A16WqFjUJFCVk1PYSH0wgCN4TaBuh/EVPj1MXwj0OaQ4UBImQDCnN6cC1MIEQoRAlRWQ1NjH9tB34IpIsrPMwTsPImD520n2aOGOuExGWkCCkZa6Dgmxq7RxZ8JgS/rmGU2MM4XHPFF/dv9ZTkiOvpVaf9u40Jr1F1hmFC5B+VSd0XwLRNHPR+hPZH1Yekh5UQ/235QSe1oOPQaFjc7O62KNL40UdtyCGB3xR3cjgU6GFAOfvfY1nbvNbBLaPzeqGIkBz+g55n/5pqvyfYPFFKmQqqWvE4gBylstyO/2o+d7kyyqg6G5mcwnWSFns2VIIrVSVGx0dpPDDGkkgByt67JEgYd/v8kI1JPhJIeXnbaIfzlUXFn3ZJANqJ2lnPjxNHDcbLVLNAx5KOeKsitS4cR1UTa9eew8aFk1scJ+MhqeXnzY+oXAXRWwGJMthFCsS9MOhFrn9r+8WOzfrDZ1nL5z9q+BYu8cMRDT61+j7clig9+fj9a/TuFpZje3dDQyWbyM0yDSNQYQNPwaa5Fxf3qu+hHIMOpikqP2k3AenVYMlov0lC3+optjBKiEwWkSu9rg/F/lVoUX26ewuuyeKtdFD28Xu7/Ivzwc3CtZUjKySVneKmXbr8Fq046wHID7BVzF13KGNo0gUYwAGtQt88CgYD0QKyVit3YuPfTOi5oCu3noiCeLSatgVxnPchBhdeuOYaDKn8zfIt1l33o7Ekv0GstxSNsk68ENzXcNBpkfdu87bbOm6Cl6JXEkO3OnnlDn+UBp9fPb6BrbnC9vkgk0iLhvup3LPmeYzWTV8Lfgzu+kaB3sQqCM+JwUGXXShUIkYqHJIltnxVfJA8C5P6w7fRtvfhW+jzgjgpPxrYiQASayw7V2OL5+raA7tfAA4Q3fNPvniwFGmadbHsgOyD7MEh2XwSyGF1+6MplF6LvO78k676t0f5dGw2/WQE9Fv+P17rAHhn3x07eo4v+KV6p8VjkPMPXztJdi+wwCVQ0ua5CZETUtKB6y+9or3YcLTOnGBy1XbURiTcWhGWkb3ZO9qMgKxGYGpT5+j6YfkHKryTcE0gY+Jo/95vLJpXXCC8aML6D/niTp2HcnghJIZLfOCUngH1vr/KQqJkG9uRXxJS1ZnjkWUCpoMFHh6MSvzhezT2onw8vqAWl1gUeJooI6pECe8Fa9F/ut452NywsDQmFNwT8jJKh5KM9Tc7UsNhsxKaN+63XMIIrPwwhG5j8EXPXC3NMfTRyFZnQQCcoY9QWHYxRlsJIO4n4u2daoj4SCAq/5ED3ElYzWpolNuZTGsdMoMRizWivwf/gR+VjdQMlh5bqXZCQnSuoxEdpeSD2LWzRnWBBlocRWzJ15sPB2tU0f5zBj6c2K/TYwva8WSDAZOWcZ9VOCrqJiULJ0/r0/6e1/6Nw7+OcRtcbtZifDesao41U/JYObJnm1GEVsaZpsSy8PcOJGAmWfmKeW7VIjeqvPfTMZHimNnjQrmz3po2fIet2JjJwghE9jxp8l1tuvAP" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="{{$HIDDEN1.ctl00$hidDirtyData}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN1.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN1.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="True" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidDirty" Value="{{$HIDDEN1.ctl00$body$hidDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtMilestoneName" Value="new one for prma" RecordedValue="new one for prma" CorrelationBinding="{{FormPostParam81.ctl00$body$txtMilestoneName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$dtpPeriodFrom$txtDate" Value="7/15/2010" RecordedValue="7/15/2010" CorrelationBinding="{{FormPostParam82.ctl00$body$dtpPeriodFrom$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$dtpPeriodTo$txtDate" Value="7/31/2010" RecordedValue="7/31/2010" CorrelationBinding="{{FormPostParam83.ctl00$body$dtpPeriodTo$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$Revenue" Value="rbtnHourlyRevenue" RecordedValue="rbtnHourlyRevenue" CorrelationBinding="{{FormPostParam84.ctl00$body$Revenue}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtFixedRevenue" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$tpProjectExpenses$projectExpenses$gvProjectExpenses$ctl03$tbEditName" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$tpProjectExpenses$projectExpenses$gvProjectExpenses$ctl03$tbEditAmount" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$tpProjectExpenses$projectExpenses$gvProjectExpenses$ctl03$tbEditReimbursement" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$tpNotes$nMilestone$tbNote" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$tpNotes$nMilestone$twNote_ClientState" Value="{{$HIDDEN1.ctl00$body$tcMilestone$tpNotes$nMilestone$twNote_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$ctl01$txtShiftDays" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$ctl01$txtCloneDuration" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__ASYNCPOST" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/MilestonePersonDetail.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam50.id" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?id=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam51.returnTo" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam5.id" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?id=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam85.ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$dpPersonStart$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_tcReportTabs_tpTable_gvMilestonePersonEntries_ctl03_dpPersonStart_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam86.ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$dpPersonEnd$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_tcReportTabs_tpTable_gvMilestonePersonEntries_ctl03_dpPersonEnd_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam87.ctl00$hidDirtyData" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="6" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam88.ctl00$body$ddlPersonName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Dol" />
            <RuleParameter Name="Index" Value="28" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam89.ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$ddlRole" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="pan=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;&#xD;&#xA;	" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam91.ctl00$hidAllowContinueWithoutSave" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_hidAllowContinueWithoutSave" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam93.ctl00$hidDirtyData" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="6" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="id" Value="{{QueryStringParam10.id}}" RecordedValue="1134" CorrelationBinding="{{QueryStringParam10.id}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="{{QueryStringParam49.returnTo}}" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fMilestoneDetail.aspx%3fid%3d1134%26projectId%3d310%26returnTo%3dhttp%253a%252f%252f216.182.84.20%253a8283%252fPracticeManagement%252fProjectDetail.aspx%253fid%253d310%2526returnTo%253dhttp%25253a%25252f%25252f216.182.84.20%25253a8283%25252fPracticeManagement%25252fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam49.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Version="1.1" Url="https://urs.microsoft.com/urs.asmx" ThinkTime="15" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="SOAPAction" Value="&quot;http://Microsoft.STS.STSWeb/RepLookup&quot;" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="MSURS-Client-Key" Value="/3fLjJRwx7Oly6RjflCOYw%3d%3d" RecordedValue="/3fLjJRwx7Oly6RjflCOYw%3d%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="MSURS-Patented-Lock" Value="MycMEk0MqFU%3d" RecordedValue="MycMEk0MqFU%3d" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <StringHttpBody ContentType="text/xml; charset=utf-8" InsertByteOrderMark="False">PABzAG8AYQBwADoARQBuAHYAZQBsAG8AcABlACAAeABtAGwAbgBzADoAcwBvAGEAcAA9ACIAaAB0AHQAcAA6AC8ALwBzAGMAaABlAG0AYQBzAC4AeABtAGwAcwBvAGEAcAAuAG8AcgBnAC8AcwBvAGEAcAAvAGUAbgB2AGUAbABvAHAAZQAvACIAIAB4AG0AbABuAHMAOgB4AHMAaQA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhAC0AaQBuAHMAdABhAG4AYwBlACIAIAB4AG0AbABuAHMAOgB4AHMAZAA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHcAMwAuAG8AcgBnAC8AMgAwADAAMQAvAFgATQBMAFMAYwBoAGUAbQBhACIAIAB4AG0AbABuAHMAOgBzAG8AYQBwAGUAbgBjAD0AIgBoAHQAdABwADoALwAvAHMAYwBoAGUAbQBhAHMALgB4AG0AbABzAG8AYQBwAC4AbwByAGcALwBzAG8AYQBwAC8AZQBuAGMAbwBkAGkAbgBnAC8AIgA+ADwAcwBvAGEAcAA6AEIAbwBkAHkAPgA8AFIAZQBwAEwAbwBvAGsAdQBwACAAeABtAGwAbgBzAD0AIgBoAHQAdABwADoALwAvAE0AaQBjAHIAbwBzAG8AZgB0AC4AUwBUAFMALgBTAFQAUwBXAGUAYgAvACIAPgA8AEcAPgB7ADIAQwBFAEQAQgBGAEIAQwAtAEQAQgBBADgALQA0ADMAQQBBAC0AQgAxAEYARAAtAEMAQwA4AEUANgAzADEANgBFADMARQAyAH0APAAvAEcAPgA8AE8APgB7ADYAQwAyAEIARABBADQAQQAtADUANgBDADQALQA0ADEAMAA1AC0AOQA2ADMANAAtADMARQBFAEIANQAxAEQANAA5ADUANgAyAH0APAAvAE8APgA8AFAAPgB7ADgAMQAzAEYARQBCAEUARAAtADMAQwBGADcALQA0AEIAQwAzAC0AOAA2ADkAQwAtAEQARAAzADAANgA4ADQAQgBFAEMANQA0AH0APAAvAFAAPgA8AEQAPgA4AC4AMAAuADYAMAAwADEALgA5ADwALwBEAD4APABDAD4AOAAuADAAMAAuADYAMAAwADEALgAxADgANgA2ADkAPAAvAEMAPgA8AFMAPgA2AC4AMQAuADcANgAwADAALgAwAC4AMAA8AC8AUwA+ADwASQA+ADgALgAwAC4ANwA2ADAAMAAuADEANgAzADgANQA8AC8ASQA+ADwATAA+AHUAawAtAFUAQQA8AC8ATAA+ADwAUgAgAHgAbQBsAG4AcwA6AHEAMQA9ACIAaAB0AHQAcAA6AC8ALwBNAGkAYwByAG8AcwBvAGYAdAAuAFMAVABTAC4AUwBUAFMAVwBlAGIALwAiACAAcwBvAGEAcABlAG4AYwA6AGEAcgByAGEAeQBUAHkAcABlAD0AIgBxADEAOgBSAHEAWwAxAF0AIgA+ADwAUgBxAD4APABUAD4AVQBSAEwAPAAvAFQAPgA8AFIAPgBoAHQAdABwADoALwAvADIAMQA2AC4AMQA4ADIALgA4ADQALgAyADAALwBwAHIAYQBjAHQAaQBjAGUAbQBhAG4AYQBnAGUAbQBlAG4AdAAvAG0AaQBsAGUAcwB0AG8AbgBlAHAAZQByAHMAbwBuAGQAZQB0AGEAaQBsAC4AYQBzAHAAeAA/AGkAZAA9ADEAMQAzADQAJgBhAG0AcAA7AHIAZQB0AHUAcgBuAFQAbwA9AGgAdAB0AHAAJQAzAGEAJQAyAGYAJQAyAGYAMgAxADYALgAxADgAMgAuADgANAAuADIAMAAlADMAYQA4ADIAOAAzACUAMgBmAFAAcgBhAGMAdABpAGMAZQBNAGEAbgBhAGcAZQBtAGUAbgB0ACUAMgBmAE0AaQBsAGUAcwB0AG8AbgBlAEQAZQB0AGEAaQBsAC4AYQBzAHAAeAAlADMAZgBpAGQAJQAzAGQAMQAxADMANAAlADIANgBwAHIAbwBqAGUAYwB0AEkAZAAlADMAZAAzADEAMAAlADIANgByAGUAdAB1AHIAbgBUAG8AJQAzAGQAaAB0AHQAcAAlADIANQAzAGEAJQAyADUAMgBmACUAMgA1ADIAZgAyADEANgAuADEAOAAyAC4AOAA0AC4AMgAwACUAMgA1ADMAYQA4ADIAOAAzACUAMgA1ADIAZgBQAHIAYQBjAHQAaQBjAGUATQBhAG4AYQBnAGUAbQBlAG4AdAAlADIANQAyAGYAUAByAG8AagBlAGMAdABEAGUAdABhAGkAbAAuAGEAcwBwAHgAJQAyADUAMwBmAGkAZAAlADIANQAzAGQAMwAxADAAJQAyADUAMgA2AHIAZQB0AHUAcgBuAFQAbwAlADIANQAzAGQAaAB0AHQAcAAlADIANQAyADUAMwBhACUAMgA1ADIANQAyAGYAJQAyADUAMgA1ADIAZgAyADEANgAuADEAOAAyAC4AOAA0AC4AMgAwACUAMgA1ADIANQAzAGEAOAAyADgAMwAlADIANQAyADUAMgBmAFAAcgBhAGMAdABpAGMAZQBNAGEAbgBhAGcAZQBtAGUAbgB0ACUAMgA1ADIANQAyAGYAUAByAG8AagBlAGMAdABTAGUAYQByAGMAaAAuAGEAcwBwAHgAPAAvAFIAPgA8AE8APgBQAFIARQA8AC8ATwA+ADwAVwA+AEYAUgBBAE0ARQA8AC8AVwA+ADwALwBSAHEAPgA8AC8AUgA+ADwALwBSAGUAcABMAG8AbwBrAHUAcAA+ADwALwBzAG8AYQBwADoAQgBvAGQAeQA+ADwALwBzAG8AYQBwADoARQBuAHYAZQBsAG8AcABlAD4A</StringHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/MilestonePersonDetail.aspx" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="x-microsoftajax" Value="Delta=true" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam52.id" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?id=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam53.returnTo" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="|" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam90.ctl00$body$btnSave" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_btnSave" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam92.ctl00$body$ddlPersonName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Dol" />
            <RuleParameter Name="Index" Value="21" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="id" Value="{{QueryStringParam50.id}}" RecordedValue="1134" CorrelationBinding="{{QueryStringParam50.id}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="{{QueryStringParam51.returnTo}}" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fMilestoneDetail.aspx%3fid%3d1134%26projectId%3d310%26returnTo%3dhttp%253a%252f%252f216.182.84.20%253a8283%252fPracticeManagement%252fProjectDetail.aspx%253fid%253d310%2526returnTo%253dhttp%25253a%25252f%25252f216.182.84.20%25253a8283%25252fPracticeManagement%25252fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam51.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00$scriptManager" Value="ctl00$body$pnlBody|ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$btnInsert" RecordedValue="ctl00$body$pnlBody|ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$btnInsert" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN1.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$btnInsert" RecordedValue="ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$btnInsert" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_body_tcReportTabs_ClientState" Value="{&quot;ActiveTabIndex&quot;:0,&quot;TabState&quot;:[true,true,true,true]}" RecordedValue="{&quot;ActiveTabIndex&quot;:0,&quot;TabState&quot;:[true,true,true,true]}" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="True" RecordedValue="True" CorrelationBinding="{{FormPostParam87.ctl00$hidDirtyData}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN1.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN1.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="True" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlPersonName" Value="3704" RecordedValue="3704" CorrelationBinding="{{FormPostParam88.ctl00$body$ddlPersonName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$dpPersonStart$txtDate" Value="7/15/2010" RecordedValue="7/15/2010" CorrelationBinding="{{FormPostParam85.ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$dpPersonStart$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$dpPersonEnd$txtDate" Value="7/31/2010" RecordedValue="7/31/2010" CorrelationBinding="{{FormPostParam86.ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$dpPersonEnd$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$ddlRole" Value="3" RecordedValue="3" CorrelationBinding="{{FormPostParam89.ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$ddlRole}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$txtHoursPerDay" Value="8" RecordedValue="8" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$txtAmount" Value="100" RecordedValue="100" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcReportTabs$tpTable$gvMilestonePersonEntries$ctl03$txtHoursInPeriod" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__ASYNCPOST" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/MilestonePersonDetail.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="x-microsoftajax" Value="Delta=true" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam54.projectId" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;projectId=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam55.returnTo" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="|" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="id" Value="{{QueryStringParam52.id}}" RecordedValue="1134" CorrelationBinding="{{QueryStringParam52.id}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="{{QueryStringParam53.returnTo}}" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fMilestoneDetail.aspx%3fid%3d1134%26projectId%3d310%26returnTo%3dhttp%253a%252f%252f216.182.84.20%253a8283%252fPracticeManagement%252fProjectDetail.aspx%253fid%253d310%2526returnTo%253dhttp%25253a%25252f%25252f216.182.84.20%25253a8283%25252fPracticeManagement%25252fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam53.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00$scriptManager" Value="ctl00$body$pnlBody|ctl00$body$btnSave" RecordedValue="ctl00$body$pnlBody|ctl00$body$btnSave" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="True" RecordedValue="True" CorrelationBinding="{{FormPostParam93.ctl00$hidDirtyData}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="True" RecordedValue="True" CorrelationBinding="{{FormPostParam91.ctl00$hidAllowContinueWithoutSave}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlPersonName" Value="3704" RecordedValue="3704" CorrelationBinding="{{FormPostParam92.ctl00$body$ddlPersonName}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__AjaxControlToolkitCalendarCssLoaded" Value="{{$HIDDEN1.__AjaxControlToolkitCalendarCssLoaded}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_body_tcReportTabs_ClientState" Value="{{$HIDDEN1.ctl00_body_tcReportTabs_ClientState}}" RecordedValue="{&quot;ActiveTabIndex&quot;:0,&quot;TabState&quot;:[true,true,true,true]}" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__ASYNCPOST" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$btnSave" Value="Save" RecordedValue="Save" CorrelationBinding="{{FormPostParam90.ctl00$body$btnSave}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/MilestoneDetail.aspx" ThinkTime="7" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam56.id" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?id=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam57.projectId" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;projectId=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam58.returnTo" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam94.ctl00$body$txtMilestoneName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtMilestoneName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam95.ctl00$body$dtpPeriodFrom$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_dtpPeriodFrom_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam96.ctl00$body$dtpPeriodTo$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_dtpPeriodTo_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam97.ctl00$body$Revenue" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_rbtnHourlyRevenue" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam98.ctl00$body$btnCancel" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_btnCancel" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="id" Value="{{QueryStringParam5.id}}" RecordedValue="1134" CorrelationBinding="{{QueryStringParam5.id}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="projectId" Value="{{QueryStringParam54.projectId}}" RecordedValue="310" CorrelationBinding="{{QueryStringParam54.projectId}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="{{QueryStringParam55.returnTo}}" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectDetail.aspx%3fid%3d310%26returnTo%3dhttp%253a%252f%252f216.182.84.20%253a8283%252fPracticeManagement%252fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam55.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/MilestoneDetail.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="x-microsoftajax" Value="Delta=true" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam59.id" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?id=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam60.returnTo" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="|" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="id" Value="{{QueryStringParam56.id}}" RecordedValue="1134" CorrelationBinding="{{QueryStringParam56.id}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="projectId" Value="{{QueryStringParam57.projectId}}" RecordedValue="310" CorrelationBinding="{{QueryStringParam57.projectId}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="{{QueryStringParam58.returnTo}}" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectDetail.aspx%3fid%3d310%26returnTo%3dhttp%253a%252f%252f216.182.84.20%253a8283%252fPracticeManagement%252fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam58.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00$scriptManager" Value="ctl00$body$upnlBody|ctl00$body$btnCancel" RecordedValue="ctl00$body$upnlBody|ctl00$body$btnCancel" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN1.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_body_tcMilestone_ClientState" Value="{&quot;ActiveTabIndex&quot;:0,&quot;TabState&quot;:[true,true,true,true,true,true,true,true]}" RecordedValue="{&quot;ActiveTabIndex&quot;:0,&quot;TabState&quot;:[true,true,true,true,true,true,true,true]}" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="{{$HIDDEN1.ctl00$hidDirtyData}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN1.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN1.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="True" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidDirty" Value="{{$HIDDEN1.ctl00$body$hidDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtMilestoneName" Value="new one for prma" RecordedValue="new one for prma" CorrelationBinding="{{FormPostParam94.ctl00$body$txtMilestoneName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$dtpPeriodFrom$txtDate" Value="7/15/2010" RecordedValue="7/15/2010" CorrelationBinding="{{FormPostParam95.ctl00$body$dtpPeriodFrom$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$dtpPeriodTo$txtDate" Value="7/31/2010" RecordedValue="7/31/2010" CorrelationBinding="{{FormPostParam96.ctl00$body$dtpPeriodTo$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$Revenue" Value="rbtnHourlyRevenue" RecordedValue="rbtnHourlyRevenue" CorrelationBinding="{{FormPostParam97.ctl00$body$Revenue}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtFixedRevenue" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$tpProjectExpenses$projectExpenses$gvProjectExpenses$ctl03$tbEditName" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$tpProjectExpenses$projectExpenses$gvProjectExpenses$ctl03$tbEditAmount" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$tpProjectExpenses$projectExpenses$gvProjectExpenses$ctl03$tbEditReimbursement" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$tpNotes$nMilestone$tbNote" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$tpNotes$nMilestone$twNote_ClientState" Value="{{$HIDDEN1.ctl00$body$tcMilestone$tpNotes$nMilestone$twNote_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$ctl01$txtShiftDays" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$tcMilestone$ctl01$txtCloneDuration" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__ASYNCPOST" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$btnCancel" Value="Cancel" RecordedValue="Cancel" CorrelationBinding="{{FormPostParam98.ctl00$body$btnCancel}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/ProjectDetail.aspx" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam61.id" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?id=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam62.returnTo" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;returnTo=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam99.ctl00$body$txtProjectName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtProjectName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam100.ctl00$body$txtBuyerName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtBuyerName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam101.ctl00$body$txtClientDiscount" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_txtClientDiscount" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam102.ctl00$body$btnCancel" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_body_btnCancel" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam103.ctl00$body$ddlProjectStatus" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Act" />
            <RuleParameter Name="Index" Value="10" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam104.ctl00$body$ddlClientName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;121" />
            <RuleParameter Name="Index" Value="14" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam105.ctl00$body$ddlProjectGroup" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Def" />
            <RuleParameter Name="Index" Value="34" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam106.ctl00$body$ddlPractice" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;202" />
            <RuleParameter Name="Index" Value="37" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam107.ctl00$body$ddlSalesperson" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Ley" />
            <RuleParameter Name="Index" Value="192" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam108.ctl00$body$ddlProjectManager" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Aa1" />
            <RuleParameter Name="Index" Value="52" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="id" Value="{{QueryStringParam59.id}}" RecordedValue="310" CorrelationBinding="{{QueryStringParam59.id}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectSearch.aspx" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam60.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/ProjectDetail.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="">
      <Headers>
        <Header Name="x-microsoftajax" Value="Delta=true" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="id" Value="{{QueryStringParam61.id}}" RecordedValue="310" CorrelationBinding="{{QueryStringParam61.id}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="returnTo" Value="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectSearch.aspx" RecordedValue="http%3a%2f%2f216.182.84.20%3a8283%2fPracticeManagement%2fProjectSearch.aspx" CorrelationBinding="{{QueryStringParam62.returnTo}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="ctl00$scriptManager" Value="ctl00$body$upnlBody|ctl00$body$btnCancel" RecordedValue="ctl00$body$upnlBody|ctl00$body$btnCancel" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00_scriptManager_HiddenField" Value="{{$HIDDEN1.ctl00_scriptManager_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDirtyData" Value="{{$HIDDEN1.ctl00$hidDirtyData}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidDoSaveDirty" Value="{{$HIDDEN1.ctl00$hidDoSaveDirty}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$hidAllowContinueWithoutSave" Value="{{$HIDDEN1.ctl00$hidAllowContinueWithoutSave}}" RecordedValue="True" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtProjectName" Value="New one for prma" RecordedValue="New one for prma" CorrelationBinding="{{FormPostParam99.ctl00$body$txtProjectName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectStatus" Value="3" RecordedValue="3" CorrelationBinding="{{FormPostParam103.ctl00$body$ddlProjectStatus}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlClientName" Value="562" RecordedValue="562" CorrelationBinding="{{FormPostParam104.ctl00$body$ddlClientName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectGroup" Value="49" RecordedValue="49" CorrelationBinding="{{FormPostParam105.ctl00$body$ddlProjectGroup}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlPractice" Value="17" RecordedValue="17" CorrelationBinding="{{FormPostParam106.ctl00$body$ddlPractice}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlSalesperson" Value="3034" RecordedValue="3034" CorrelationBinding="{{FormPostParam107.ctl00$body$ddlSalesperson}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidSalesCommissionId" Value="{{$HIDDEN1.ctl00$body$hidSalesCommissionId}}" RecordedValue="448" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$ddlProjectManager" Value="3641" RecordedValue="3641" CorrelationBinding="{{FormPostParam108.ctl00$body$ddlProjectManager}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$hidPracticeManagementCommissionId" Value="{{$HIDDEN1.ctl00$body$hidPracticeManagementCommissionId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$chbIsChargeable" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtBuyerName" Value="Julia" RecordedValue="Julia" CorrelationBinding="{{FormPostParam100.ctl00$body$txtBuyerName}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$txtClientDiscount" Value="2.00" RecordedValue="2.00" CorrelationBinding="{{FormPostParam101.ctl00$body$txtClientDiscount}}" UrlEncode="True" />
        <FormPostParameter Name="__ASYNCPOST" Value="true" RecordedValue="true" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$body$btnCancel" Value="Cancel" RecordedValue="Cancel" CorrelationBinding="{{FormPostParam102.ctl00$body$btnCancel}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Version="1.1" Url="http://216.182.84.20:8283/PracticeManagement/ProjectSearch.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" />
  </Items>
</WebTest>
