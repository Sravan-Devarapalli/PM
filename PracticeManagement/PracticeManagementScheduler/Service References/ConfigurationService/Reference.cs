//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PracticeManagementScheduler.ConfigurationService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConfigurationService.IConfigurationService")]
    public interface IConfigurationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetAllEmailTemplates", ReplyAction="http://tempuri.org/IConfigurationService/GetAllEmailTemplatesResponse")]
        DataTransferObjects.EmailTemplate[] GetAllEmailTemplates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateEmailTemplate", ReplyAction="http://tempuri.org/IConfigurationService/UpdateEmailTemplateResponse")]
        bool UpdateEmailTemplate(DataTransferObjects.EmailTemplate template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddEmailTemplate", ReplyAction="http://tempuri.org/IConfigurationService/AddEmailTemplateResponse")]
        bool AddEmailTemplate(DataTransferObjects.EmailTemplate template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteEmailTemplate", ReplyAction="http://tempuri.org/IConfigurationService/DeleteEmailTemplateResponse")]
        bool DeleteEmailTemplate(int templateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/CheckProjectedProjects", ReplyAction="http://tempuri.org/IConfigurationService/CheckProjectedProjectsResponse")]
        void CheckProjectedProjects(int templateId, string companyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetEmailData", ReplyAction="http://tempuri.org/IConfigurationService/GetEmailDataResponse")]
        DataTransferObjects.EmailData GetEmailData(DataTransferObjects.ContextObjects.EmailContext emailContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/CheckProjectedProjectsByHireDate", ReplyAction="http://tempuri.org/IConfigurationService/CheckProjectedProjectsByHireDateResponse" +
            "")]
        void CheckProjectedProjectsByHireDate(int templateId, string companyName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConfigurationServiceChannel : PracticeManagementScheduler.ConfigurationService.IConfigurationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConfigurationServiceClient : System.ServiceModel.ClientBase<PracticeManagementScheduler.ConfigurationService.IConfigurationService>, PracticeManagementScheduler.ConfigurationService.IConfigurationService {
        
        public ConfigurationServiceClient() {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigurationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DataTransferObjects.EmailTemplate[] GetAllEmailTemplates() {
            return base.Channel.GetAllEmailTemplates();
        }
        
        public bool UpdateEmailTemplate(DataTransferObjects.EmailTemplate template) {
            return base.Channel.UpdateEmailTemplate(template);
        }
        
        public bool AddEmailTemplate(DataTransferObjects.EmailTemplate template) {
            return base.Channel.AddEmailTemplate(template);
        }
        
        public bool DeleteEmailTemplate(int templateId) {
            return base.Channel.DeleteEmailTemplate(templateId);
        }
        
        public void CheckProjectedProjects(int templateId, string companyName) {
            base.Channel.CheckProjectedProjects(templateId, companyName);
        }
        
        public DataTransferObjects.EmailData GetEmailData(DataTransferObjects.ContextObjects.EmailContext emailContext) {
            return base.Channel.GetEmailData(emailContext);
        }
        
        public void CheckProjectedProjectsByHireDate(int templateId, string companyName) {
            base.Channel.CheckProjectedProjectsByHireDate(templateId, companyName);
        }
    }
}

