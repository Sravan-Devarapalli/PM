CREATE TRIGGER [tr_TT_LogUpdateDelete]
    ON [dbo].[TimeTrack]
    AFTER UPDATE, DELETE
AS 
BEGIN

	IF NOT EXISTS (SELECT  1 FROM deleted d 
				LEFT JOIN inserted i ON i.TimeEntryId = d.TimeEntryId
				WHERE d.IsAutoGenerated = 1 AND (i.IsAutoGenerated = 1 OR i.TimeEntryId IS NULL))
	BEGIN
		-- Ensure the temporary table exists
		EXEC SessionLogPrepare @UserLogin = NULL;
	
		DECLARE @CurrentPMTime DATETIME 
		SET @CurrentPMTime = dbo.InsertingTime()

		;WITH NEW_VALUES AS
		(
			SELECT 1 AS Tag,
				   NULL AS Parent, 
				   ins.[TimeEntryId] AS 'TimeEntryId'
				  ,CONVERT(VARCHAR(10), ins.[CreateDate], 101) AS 'CreateDate'
				  ,CONVERT(VARCHAR(10), ins.[ModifiedDate], 101) AS 'ModifiedDate'
				  ,CAST(ins.[ActualHours] as decimal(20,2)) AS 'ActualHours'
				  ,CAST(ins.[ForecastedHours] as decimal(20,2)) AS 'ForecastedHours'
				  ,CC.[TimeTypeId] AS 'TimeTypeId'
				  ,tType.[Name] AS 'TimeTypeName'
				  ,ins.[ModifiedBy] AS 'ModifiedBy'
				  ,ins.[Note] AS 'Note'
				  ,CASE ins.[IsReviewed] WHEN 1 THEN 'Approved'
										WHEN 0 THEN 'Declined'
										 ELSE 'Pending' END AS 'ReviewStatus'
				  ,CASE ins.[IsCorrect] WHEN 1 THEN 'Correct'
										 ELSE 'InCorrect' END AS 'IsCorrect'
				  ,CASE ins.[IsChargeable] WHEN 1 THEN 'Billable'
											ELSE 'Not Billable' END AS 'IsBillable'
				  ,CONVERT(VARCHAR(10), ins.[ChargeCodeDate], 101) AS 'ChargeCodeDate'
				  ,modp.LastName + ', ' + modp.FirstName AS 'ModifiedByName'
				  ,objp.LastName + ', ' + objp.FirstName AS 'ObjectName'
				  ,objp.PersonId AS 'ObjectPersonId'
				  ,clnt.[name] AS 'ClientName'
				  ,clnt.[ClientId] AS 'ClientId'
				  ,PG.[GroupId] AS 'ProjectGroupId'
				  ,PG.[Name] AS 'ProjectGroupName'
				  ,proj.[name] AS 'ProjectName'
				  ,proj.ProjectId AS 'ProjectId'
				  ,clnt.[Code] + ' - ' + PG.[Code] + ' - ' + proj.ProjectNumber + ' - ' + '01 - ' + tType.Code AS 'ChargeCode'
			FROM inserted AS ins
			INNER JOIN dbo.ChargeCode AS CC ON CC.Id = ins.ChargeCodeId
			INNER JOIN dbo.Person AS modp ON modp.PersonId = ins.ModifiedBy
			INNER JOIN dbo.Person AS objp ON objp.PersonId = ins.PersonId
			INNER JOIN dbo.Project AS proj ON proj.ProjectId = CC.ProjectId
			INNER JOIN dbo.Client AS clnt ON CC.ClientId = clnt.ClientId
			INNER JOIN dbo.TimeType AS tType ON tType.TimeTypeId = CC.TimeTypeId
			INNER JOIN dbo.ProjectGroup AS PG ON PG.GroupId = CC.ProjectGroupId
		),

		OLD_VALUES AS
		(
			SELECT   1 AS Tag,
				   NULL AS Parent, 
				   del.[TimeEntryId] AS 'TimeEntryId'
				  ,CONVERT(VARCHAR(10), del.[CreateDate], 101) AS 'CreateDate'
				  ,CONVERT(VARCHAR(10), del.[ModifiedDate], 101) AS 'ModifiedDate'
				  ,CAST(del.[ActualHours] as decimal(20,2)) AS 'ActualHours'
				  ,CAST(del.[ForecastedHours] as decimal(20,2)) AS 'ForecastedHours'
				  ,CC.[TimeTypeId] AS 'TimeTypeId'
				  ,tType.[Name] AS 'TimeTypeName'
				  ,del.[ModifiedBy] AS 'ModifiedBy'
				  ,del.[Note] AS 'Note'
				  ,CASE del.[IsReviewed] WHEN 1 THEN 'Approved'
										WHEN 0 THEN 'Declined'
										 ELSE 'Pending' END AS 'ReviewStatus'
				  ,CASE del.[IsCorrect] WHEN 1 THEN 'Correct'
										 ELSE 'InCorrect' END AS 'IsCorrect'
				  ,CASE del.[IsChargeable] WHEN 1 THEN 'Billable'
											ELSE 'Not Billable' END AS 'IsBillable'
				  ,CONVERT(VARCHAR(10), del.[ChargeCodeDate], 101) AS 'ChargeCodeDate'
				  ,modp.LastName + ', ' + modp.FirstName AS 'ModifiedByName'
				  ,objp.LastName + ', ' + objp.FirstName AS 'ObjectName'
				  ,objp.PersonId AS 'ObjectPersonId'
				  ,clnt.[name] AS 'ClientName'
				  ,clnt.[ClientId] AS 'ClientId'
				  ,PG.[GroupId] AS 'ProjectGroupId'
				  ,PG.[Name] AS 'ProjectGroupName'
				  ,proj.[name] AS 'ProjectName'
				  ,proj.ProjectId AS 'ProjectId'
				  ,clnt.[Code] + ' - ' + PG.[Code] + ' - ' + proj.ProjectNumber + ' - ' + '01 - ' + tType.Code AS 'ChargeCode'
			FROM deleted AS del
			INNER JOIN dbo.ChargeCode AS CC ON CC.Id = del.ChargeCodeId
			INNER JOIN dbo.Person AS modp ON modp.PersonId = del.ModifiedBy
			INNER JOIN dbo.Person AS objp ON objp.PersonId = del.PersonId
			INNER JOIN dbo.Project AS proj ON proj.ProjectId = CC.ProjectId
			INNER JOIN dbo.Client AS clnt ON CC.ClientId = clnt.ClientId
			INNER JOIN dbo.TimeType AS tType ON tType.TimeTypeId = CC.TimeTypeId
			INNER JOIN dbo.ProjectGroup AS PG ON PG.GroupId = CC.ProjectGroupId
		)

		-- Log an activity
		INSERT INTO dbo.UserActivityLog
					(ActivityTypeID,
					 SessionID,
					 SystemUser,
					 Workstation,
					 ApplicationName,
					 UserLogin,
					 PersonID,
					 LastName,
					 FirstName,
					 Data,
					 LogData,
					 LogDate)
		SELECT CASE
				   WHEN d.TimeEntryId IS NULL THEN 3 -- Actually is redundant
				   WHEN i.TimeEntryId IS NULL THEN 5
				   ELSE 4
			   END AS ActivityTypeID,
			   l.SessionID,
			   l.SystemUser,
			   l.Workstation,
			   l.ApplicationName,
			   l.UserLogin,
			   l.PersonID,
			   l.LastName,
			   l.FirstName,
			   Data = CONVERT(NVARCHAR(MAX),(SELECT *
							FROM NEW_VALUES
								 FULL JOIN OLD_VALUES ON NEW_VALUES.TimeEntryId = OLD_VALUES.TimeEntryId
						   WHERE NEW_VALUES.TimeEntryId = ISNULL(i.TimeEntryId, d.TimeEntryId) OR OLD_VALUES.TimeEntryId = ISNULL(i.TimeEntryId, d.TimeEntryId)
						  FOR XML AUTO, ROOT('TimeEntry'))),
				LogData = (SELECT NEW_VALUES.Parent, 
									NEW_VALUES.TimeEntryId,
									NEW_VALUES.CreateDate,
									NEW_VALUES.ModifiedDate,
									NEW_VALUES.TimeTypeId,
									NEW_VALUES.ModifiedBy,
									NEW_VALUES.ChargeCodeDate,
									NEW_VALUES.ObjectPersonId,
									NEW_VALUES.ClientId,
									NEW_VALUES.ProjectGroupId,
									NEW_VALUES.ProjectId,
									OLD_VALUES.Parent, 
									OLD_VALUES.TimeEntryId,
									OLD_VALUES.CreateDate,
									OLD_VALUES.ModifiedDate,
									OLD_VALUES.TimeTypeId,
									OLD_VALUES.ModifiedBy,
									OLD_VALUES.ChargeCodeDate,
									OLD_VALUES.ObjectPersonId,
									OLD_VALUES.ClientId,
									OLD_VALUES.ProjectGroupId,
									OLD_VALUES.ProjectId
							FROM NEW_VALUES
								 FULL JOIN OLD_VALUES ON NEW_VALUES.TimeEntryId = OLD_VALUES.TimeEntryId
						   WHERE NEW_VALUES.TimeEntryId = ISNULL(i.TimeEntryId, d.TimeEntryId) OR OLD_VALUES.TimeEntryId = ISNULL(i.TimeEntryId, d.TimeEntryId)
						  FOR XML AUTO, ROOT('TimeEntry'), TYPE),
				@CurrentPMTime
		  FROM inserted AS i
			   FULL JOIN deleted AS d ON i.TimeEntryId = d.TimeEntryId
			   INNER JOIN dbo.SessionLogData AS l ON l.SessionID = @@SPID
	 
	 END
END

