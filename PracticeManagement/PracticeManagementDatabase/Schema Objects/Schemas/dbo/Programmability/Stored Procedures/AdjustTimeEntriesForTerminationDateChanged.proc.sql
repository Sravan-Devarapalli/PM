CREATE PROCEDURE [dbo].[AdjustTimeEntriesForTerminationDateChanged]
(
	@PersonId   INT,
	@TerminationDate  DATETIME,
	@PreviousTerminationDate DATETIME,
	@UserLogin  NVARCHAR(255)
)
AS
BEGIN
	DECLARE @HolidayTimeTypeId INT,@W2SalaryId INT
	SELECT @HolidayTimeTypeId = dbo.GetHolidayTimeTypeId()
	SELECT @W2SalaryId = TimescaleId FROM Timescale WHERE Name = 'W2-Salary'

	--1.if updated termination date is less than the previous termination date OR termination date is set to some date. 
	IF @TerminationDate IS NOT NULL AND (@TerminationDate < @PreviousTerminationDate OR @PreviousTerminationDate IS NULL)
	BEGIN
		--Delete all Administrative timeEntries greater than @TerminationDate.
		DELETE TEH
		FROM TimeEntry TE
		JOIN ChargeCode CC ON TE.PersonId = @PersonId  AND CC.Id = TE.ChargeCodeId AND TE.ChargeCodeDate > @TerminationDate
		JOIN TimeType TT ON TT.TimeTypeId = CC.TimeTypeId AND TT.IsAdministrative = 1
		JOIN TimeEntryHours TEH ON TEH.TimeEntryId = TE.TimeEntryId
			
		DELETE TE
		FROM TimeEntry TE
		JOIN ChargeCode CC ON TE.PersonId = @PersonId  AND CC.Id = TE.ChargeCodeId AND TE.ChargeCodeDate > @TerminationDate
		JOIN TimeType TT ON TT.TimeTypeId = CC.TimeTypeId AND TT.IsAdministrative = 1

	END
	--2.if updated termination date is greater than the previous termination date OR termination date is removed. 
	ELSE IF @PreviousTerminationDate IS NOT NULL AND (@TerminationDate > @PreviousTerminationDate OR @TerminationDate IS NULL)
	BEGIN
		DECLARE @CurrentPMTime DATETIME,
				@PersonUserId INT
		SET @CurrentPMTime = dbo.InsertingTime()
		SELECT @PersonUserId = PersonId FROM Person WHERE Alias = @UserLogin
		--Insert all Holyday timeEntries for w2salaried persons between  @PreviousTerminationDate and @TerminationDate.	
		INSERT  INTO [dbo].[TimeEntry]
						( [PersonId],
							[ChargeCodeId],
							[ChargeCodeDate],
							[Note],
							[ForecastedHours],
							[IsCorrect],
							[IsAutoGenerated]
						)
		SELECT @PersonId,
				--CASE WHEN PC.PersonId IS NOT NULL AND PC.DayOff = 1 AND ISNULL(PC.IsFloatingHoliday,0) = 0 THEN @PTOChargeCodeId ELSE @HolidayChargeCodeId END,
				CC.Id,
				C.Date,
				ISNULL(C.HolidayDescription, ISNULL(PC.Description, '')),
				--CASE WHEN PC.PersonId IS NOT NULL AND PC.DayOff = 1 AND ISNULL(PC.IsFloatingHoliday,0) = 0 THEN 'PTO'
				--	WHEN PC.PersonId IS NOT NULL AND PC.DayOff = 1 AND PC.IsFloatingHoliday = 1 THEN 'Floating Holiday'
				--	ELSE ISNULL(C.HolidayDescription,'') END,
				0,
				1,
				1
		FROM dbo.Calendar C
		JOIN dbo.Pay p ON C.Date BETWEEN p.StartDate AND ( CASE WHEN @TerminationDate IS NOT NULL AND @TerminationDate < p.EndDate - 1 THEN @TerminationDate
															ELSE p.EndDate- 1 END) AND p.Person = @PersonId AND p.Timescale = @W2SalaryId
		LEFT JOIN dbo.PersonCalendar PC ON PC.Date = C.Date AND PC.PersonId = P.Person AND PC.DayOff = 1
		INNER JOIN dbo.TimeType TT ON ( (C.DayOff = 1  AND DATEPART(DW,C.DATE) NOT IN (1,7) AND TT.TimeTypeId = @HolidayTimeTypeId) 
										OR (PC.PersonId IS NOT NULL AND PC.DayOff = 1 AND TT.TimeTypeId = PC.TimeTypeId) 
										)
		INNER JOIN dbo.ChargeCode CC ON CC.TimeTypeId = TT.TimeTypeId
		LEFT JOIN dbo.TimeEntry TE ON TE.PersonId = p.Person AND TE.ChargeCodeId = CC.Id AND TE.ChargeCodeDate = C.Date
		WHERE TE.TimeEntryId IS NULL

		INSERT INTO [dbo].[TimeEntryHours] 
								( [TimeEntryId],
									[ActualHours],
									[CreateDate],
									[ModifiedDate],
									[ModifiedBy],
									[IsChargeable],
									[ReviewStatusId]
								)
		SELECT TE.TimeEntryId,
				CASE WHEN TT.TimeTypeId = @HolidayTimeTypeId THEN 8 
					ELSE ISNULL(PC.ActualHours,8) END,
				@CurrentPMTime,
				@CurrentPMTime,
				@PersonUserId,
				0, --NON billable.
				CASE WHEN C.DayOff = 1 OR (PC.PersonId IS NOT NULL AND PC.DayOff = 1 AND PC.TimeTypeId <> @HolidayTimeTypeId AND PC.IsFromTimeEntry <> 1) THEN 2 
					ELSE 1 END
		FROM dbo.Calendar C
		JOIN dbo.Pay p ON C.Date BETWEEN p.StartDate AND ( CASE WHEN @TerminationDate IS NOT NULL AND @TerminationDate < p.EndDate - 1 THEN @TerminationDate
															ELSE p.EndDate- 1 END) AND p.Person = @PersonId AND p.Timescale = @W2SalaryId
		LEFT JOIN dbo.PersonCalendar PC ON PC.Date = C.Date AND PC.PersonId = P.Person AND PC.DayOff = 1
		INNER JOIN dbo.TimeType TT ON ( (C.DayOff = 1  AND DATEPART(DW,C.DATE) NOT IN (1,7) AND TT.TimeTypeId = @HolidayTimeTypeId) 
										OR (PC.PersonId IS NOT NULL AND PC.DayOff = 1 AND TT.TimeTypeId = PC.TimeTypeId) 
										)
		INNER JOIN dbo.ChargeCode CC ON CC.TimeTypeId = TT.TimeTypeId
		INNER JOIN dbo.TimeEntry TE ON TE.PersonId = p.Person AND TE.ChargeCodeId = CC.Id AND TE.ChargeCodeDate = C.Date
		LEFT JOIN dbo.TimeEntryHours TEH ON TEH.TimeEntryId = TE.TimeEntryId
		WHERE TEH.Id IS NULL
	END

END

